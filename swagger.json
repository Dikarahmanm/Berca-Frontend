{
  "openapi": "3.0.4",
  "info": {
    "title": "Toko Eniwan POS API",
    "description": "Enhanced with Multi-Branch System - POS, Inventory, Membership, Notifications & Dashboard APIs",
    "version": "v1"
  },
  "paths": {
    "/api/Analytics/dashboard": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "parameters": [
          {
            "name": "branchIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Analytics/alerts/{id}/dismiss": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/debug-auth": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/check": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/switch-branch": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchBranchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchBranchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SwitchBranchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/whoami": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/validate-user/{username}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Branch"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/accessible": {
      "get": {
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/{id}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/hierarchy": {
      "get": {
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/{id}/permanent": {
      "delete": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/performance": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/performance/comparison": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "compareDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/by-region": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/analytics/store-size": {
      "get": {
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/analytics/regional": {
      "get": {
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/user-summaries": {
      "get": {
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/active": {
      "get": {
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/inactive": {
      "get": {
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/{id}/toggle-status": {
      "patch": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchStatusChangeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchStatusChangeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BranchStatusChangeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/validate-code/{branchCode}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "parameters": [
          {
            "name": "branchCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeBranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/my-accessible": {
      "get": {
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Branch/analytics/comprehensive": {
      "get": {
        "tags": [
          "Branch"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "eventType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CalendarEventType"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/EventPriority"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeInactive",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isAutoGenerated",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Calendar"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCalendarEventDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCalendarEventDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCalendarEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/date-range": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/{id}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCalendarEventDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCalendarEventDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCalendarEventDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/bulk-operation": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkEventOperationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkEventOperationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkEventOperationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/month-view/{year}/{month}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/daily-summary": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/dashboard": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/auto-generate": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoGenerateEventsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AutoGenerateEventsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AutoGenerateEventsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/generate/product-expiry": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "daysAhead",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/generate/facture-due": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "daysAhead",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/entity/{entityType}/{entityId}": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/statistics": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/attention": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/upcoming": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 7
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/search": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Calendar/reminders/pending": {
      "get": {
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category": {
      "get": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Color",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequiresExpiryDate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryListDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryListDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryListDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Category/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/check-name": {
      "get": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Category/simple": {
      "get": {
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Category/with-expiry": {
      "get": {
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryWithExpiryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryWithExpiryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryWithExpiryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Category/{id}/requires-expiry": {
      "get": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/expiry-stats": {
      "get": {
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Category/update-expiry-requirements": {
      "post": {
        "tags": [
          "Category"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "boolean"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "boolean"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/by-expiry-requirement": {
      "get": {
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "requiresExpiry",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ConsolidatedReport/sales-comparison": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/inventory-overview": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/regional-dashboard": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/branch-ranking": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/executive-summary": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/real-time-metrics": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/trend-analysis": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/export": {
      "post": {
        "tags": [
          "ConsolidatedReport"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportParams"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportParams"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExportParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/generate-export-url": {
      "post": {
        "tags": [
          "ConsolidatedReport"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportParams"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportParams"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExportParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/store-size-analysis": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/employee-productivity": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/profit-analysis": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/peak-hours-analysis": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/store-maturity-analysis": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ConsolidatedReport/dashboard-summary": {
      "get": {
        "tags": [
          "ConsolidatedReport"
        ],
        "parameters": [
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DateRange",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Province",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "City",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BranchType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/BranchType"
            }
          },
          {
            "name": "StoreSize",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IncludeInactive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "GroupByRegion",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IncludeTrends",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Dashboard/kpis": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardKPIDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardKPIDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardKPIDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/quick-stats": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/QuickStatsDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickStatsDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickStatsDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/charts/sales": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "daily"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChartDataDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartDataDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartDataDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/charts/revenue": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "monthly"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ChartDataDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartDataDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartDataDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/products/top-selling": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "quantity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TopProductDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopProductDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopProductDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/products/low-stock": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/categories/sales": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CategorySalesDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategorySalesDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategorySalesDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/transactions/recent": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RecentTransactionDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentTransactionDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecentTransactionDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/reports/sales": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SalesReportDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/reports/inventory": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReportDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReportDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryReportDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/products/worst-performing": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorstProductDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorstProductDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorstProductDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/reports/financial": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialReportDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialReportDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialReportDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/reports/customer": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReportDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReportDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerReportDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/reports/sales/export": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "PDF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/reports/inventory/export": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "PDF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/reports/financial/export": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "PDF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/reports/customer/export": {
      "post": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "format",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "PDF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportExportDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/kpis/period": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "today"
            }
          },
          {
            "name": "customStart",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "customEnd",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardKPIDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardKPIDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardKPIDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Dashboard/products/top-selling/enhanced": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "period",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "week"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "normalized"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TopProductDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopProductDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopProductDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/ExpiryManagement/batches": {
      "post": {
        "tags": [
          "ExpiryManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductBatchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductBatchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductBatchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/batches/{id}": {
      "put": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductBatchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductBatchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductBatchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/products/{productId}/batches": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/expiring-products": {
      "post": {
        "tags": [
          "ExpiryManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpiringProductsFilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpiringProductsFilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpiringProductsFilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/expired-products": {
      "post": {
        "tags": [
          "ExpiryManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpiredProductsFilterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpiredProductsFilterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExpiredProductsFilterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/products/{productId}/validate-expiry": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expiryDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/mark-expired": {
      "post": {
        "tags": [
          "ExpiryManagement"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/products-requiring-expiry": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/fifo-recommendations": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/products/{productId}/batch-sale-order": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestedQuantity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/process-fifo-sale": {
      "post": {
        "tags": [
          "ExpiryManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessFifoSaleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessFifoSaleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessFifoSaleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/products/{productId}/transfer-allocation": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sourceBranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/dispose-products": {
      "post": {
        "tags": [
          "ExpiryManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisposeExpiredProductsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DisposeExpiredProductsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DisposeExpiredProductsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/disposable-products": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/undo-disposal": {
      "post": {
        "tags": [
          "ExpiryManagement"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UndoDisposalDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UndoDisposalDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UndoDisposalDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/analytics": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/category-stats": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/trends": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/wastage-metrics": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/notification-products": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/create-notifications": {
      "post": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/daily-check": {
      "post": {
        "tags": [
          "ExpiryManagement"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/update-statuses": {
      "post": {
        "tags": [
          "ExpiryManagement"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ExpiryManagement/comprehensive-analytics": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ComprehensiveExpiryAnalyticsDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComprehensiveExpiryAnalyticsDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComprehensiveExpiryAnalyticsDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/ExpiryManagement/smart-fifo-recommendations": {
      "get": {
        "tags": [
          "ExpiryManagement"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SmartFifoRecommendationDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartFifoRecommendationDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartFifoRecommendationDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/receive": {
      "post": {
        "tags": [
          "Facture"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceiveFactureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReceiveFactureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReceiveFactureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/{id}/verify": {
      "post": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyFactureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyFactureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyFactureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/{id}/approve": {
      "post": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/{id}/dispute": {
      "post": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisputeFactureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DisputeFactureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DisputeFactureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/{id}/cancel": {
      "post": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Facture": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "CreatedAt"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Facture/{id}": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFactureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFactureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFactureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/supplier-invoice/{supplierInvoiceNumber}": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/supplier/{supplierId}": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeCompleted",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/supplier/{supplierId}/summary": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "supplierId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierFactureSummaryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierFactureSummaryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierFactureSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/{id}/payments/schedule": {
      "post": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePaymentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePaymentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SchedulePaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/payments/{paymentId}/process": {
      "post": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessPaymentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessPaymentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessPaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/payments/{paymentId}/confirm": {
      "post": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmPaymentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmPaymentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmPaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/{id}/payments": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FacturePaymentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FacturePaymentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FacturePaymentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/payments/{paymentId}": {
      "put": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacturePaymentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/payments/{paymentId}/cancel": {
      "post": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Facture/pending-verification": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/pending-approval": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/overdue-payments": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/payments-due-soon": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "daysAhead",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 7
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/payments-due-today": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/summary": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FactureSummaryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureSummaryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureSummaryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/payment-analytics": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "daysAhead",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Facture/aging-analysis": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Facture/outstanding-factures": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "supplierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FactureListDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/top-suppliers-by-factures": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutstandingBySupplierDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutstandingBySupplierDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutstandingBySupplierDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/suppliers-by-branch": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SuppliersByBranchDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SuppliersByBranchDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SuppliersByBranchDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/supplier-alerts": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "priorityFilter",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierAlertsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierAlertsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierAlertsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/{id}/record-delivery": {
      "post": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordDeliveryRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordDeliveryRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecordDeliveryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactureDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/{id}/request-clarification": {
      "post": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestClarificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestClarificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestClarificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Facture/validate-invoice-number": {
      "get": {
        "tags": [
          "Facture"
        ],
        "parameters": [
          {
            "name": "supplierInvoiceNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "supplierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "excludeFactureId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/Facture/generate-reference": {
      "get": {
        "tags": [
          "Facture"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/request": {
      "post": {
        "tags": [
          "InventoryTransfer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryTransferRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryTransferRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryTransferRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/bulk-request": {
      "post": {
        "tags": [
          "InventoryTransfer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkTransferRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkTransferRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkTransferRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/{id}": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "SourceBranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DestinationBranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TransferStatus"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TransferType"
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/TransferPriority"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/{id}/approve": {
      "put": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferApprovalRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferApprovalRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransferApprovalRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/{id}/ship": {
      "put": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferShipmentRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferShipmentRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransferShipmentRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/{id}/receive": {
      "put": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferReceiptRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferReceiptRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransferReceiptRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/{id}/cancel": {
      "put": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTransferRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTransferRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTransferRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/emergency": {
      "post": {
        "tags": [
          "InventoryTransfer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyTransferRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyTransferRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmergencyTransferRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/emergency-suggestions": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyTransferSuggestionDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyTransferSuggestionDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmergencyTransferSuggestionDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/analytics": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransferAnalyticsDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferAnalyticsDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferAnalyticsDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/suggestions": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransferSuggestionsDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferSuggestionsDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferSuggestionsDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/branch-stats": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BranchTransferStatsDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchTransferStatsDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchTransferStatsDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/trends": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransferTrendDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferTrendDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferTrendDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/rebalancing-suggestions": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StockRebalancingSuggestionDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockRebalancingSuggestionDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockRebalancingSuggestionDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/route-optimization": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransferEfficiencyDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferEfficiencyDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferEfficiencyDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/{id}/history": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferStatusHistoryListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferStatusHistoryListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryTransferStatusHistoryListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/activity-summary": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/available-sources": {
      "get": {
        "tags": [
          "InventoryTransfer"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "destinationBranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requiredQuantity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableSourceDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableSourceDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableSourceDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryTransfer/calculate-cost": {
      "post": {
        "tags": [
          "InventoryTransfer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferCostCalculationRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferCostCalculationRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransferCostCalculationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberSearchResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberSearchResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberSearchResponseApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Member"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/{id}": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/phone/{phone}": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/number/{memberNumber}": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "memberNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/{id}/points/add": {
      "post": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPointsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPointsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPointsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/{id}/points/redeem": {
      "post": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemPointsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemPointsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemPointsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/{id}/points/history": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberPointDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberPointDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberPointDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/{id}/points/balance": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/{id}/stats": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberStatsDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberStatsDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberStatsDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/reports/top-members": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TopMemberDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopMemberDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopMemberDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/{id}/update-tier": {
      "post": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/validate/phone/{phone}": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/{id}/with-credit": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberWithCreditDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberWithCreditDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberWithCreditDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/search-with-credit": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "CreditStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "HasOutstandingDebt",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MinCreditLimit",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "MaxCreditLimit",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "MinCreditUtilization",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "MaxCreditUtilization",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "IsOverdue",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsEligibleForCredit",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "MinCreditScore",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxCreditScore",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LastPaymentFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "LastPaymentTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Phone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MemberNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "RegisteredFrom",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "RegisteredTo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MinTotalSpent",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "MaxTotalSpent",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "MinPoints",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MaxPoints",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberWithCreditDtoPagedResultApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberWithCreditDtoPagedResultApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberWithCreditDtoPagedResultApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/{id}/credit-status": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberCreditStatusDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberCreditStatusDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberCreditStatusDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/credit-lookup/{identifier}": {
      "get": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/POSMemberCreditDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSMemberCreditDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSMemberCreditDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Member/{id}/update-after-credit": {
      "post": {
        "tags": [
          "Member"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberAfterCreditRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberAfterCreditRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMemberAfterCreditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/MemberCredit/{memberId}/credit/grant": {
      "post": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantCreditDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GrantCreditDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GrantCreditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/{memberId}/credit/payment": {
      "post": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordPaymentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordPaymentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RecordPaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/{memberId}/credit/eligibility": {
      "get": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/{memberId}/credit/summary": {
      "get": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/{memberId}/credit/history": {
      "get": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "days",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 90
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/collections/overdue": {
      "get": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/collections/approaching-limit": {
      "get": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "threshold",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double",
              "default": 80
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/{memberId}/credit/status": {
      "put": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/{memberId}/credit/limit": {
      "put": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditLimitDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditLimitDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCreditLimitDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/reminders": {
      "get": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "reminderDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/{memberId}/reminders/send": {
      "post": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/analytics": {
      "get": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/{memberId}/credit/score": {
      "get": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/reminders/bulk-send": {
      "post": {
        "tags": [
          "MemberCredit"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MemberCredit/maintenance/update-all-status": {
      "post": {
        "tags": [
          "MemberCredit"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/MultiBranchCoordination/transfer-recommendations": {
      "get": {
        "tags": [
          "MultiBranchCoordination"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InterBranchTransferRecommendationDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterBranchTransferRecommendationDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterBranchTransferRecommendationDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/MultiBranchCoordination/branch-performance": {
      "get": {
        "tags": [
          "MultiBranchCoordination"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPerformanceComparisonDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPerformanceComparisonDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchPerformanceComparisonDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/MultiBranchCoordination/optimization-opportunities": {
      "get": {
        "tags": [
          "MultiBranchCoordination"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CrossBranchOpportunityDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrossBranchOpportunityDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CrossBranchOpportunityDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/MultiBranchCoordination/optimize-distribution": {
      "post": {
        "tags": [
          "MultiBranchCoordination"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryDistributionPlanDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryDistributionPlanDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryDistributionPlanDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/MultiBranchCoordination/demand-forecast": {
      "get": {
        "tags": [
          "MultiBranchCoordination"
        ],
        "parameters": [
          {
            "name": "forecastDays",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          },
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BranchDemandForecastDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchDemandForecastDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchDemandForecastDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/MultiBranchCoordination/coordination-health": {
      "get": {
        "tags": [
          "MultiBranchCoordination"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CoordinationHealthDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoordinationHealthDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoordinationHealthDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/MultiBranchCoordination/execute-optimization": {
      "post": {
        "tags": [
          "MultiBranchCoordination"
        ],
        "parameters": [
          {
            "name": "dryRun",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationExecutionResultDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationExecutionResultDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationExecutionResultDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification": {
      "get": {
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "name": "isRead",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Notification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification/summary": {
      "get": {
        "tags": [
          "Notification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSummaryDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSummaryDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSummaryDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification/{id}/read": {
      "post": {
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification/read-all": {
      "post": {
        "tags": [
          "Notification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification/{id}": {
      "delete": {
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification/broadcast": {
      "post": {
        "tags": [
          "Notification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BroadcastNotificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BroadcastNotificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BroadcastNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification/broadcast/role": {
      "post": {
        "tags": [
          "Notification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BroadcastToRoleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BroadcastToRoleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BroadcastToRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification/settings": {
      "get": {
        "tags": [
          "Notification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Notification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNotificationSettingsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification/system/low-stock/{productId}": {
      "post": {
        "tags": [
          "Notification"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "currentStock",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification/system/monthly-revenue": {
      "post": {
        "tags": [
          "Notification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonthlyRevenueNotificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MonthlyRevenueNotificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MonthlyRevenueNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification/system/inventory-audit": {
      "post": {
        "tags": [
          "Notification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Notification/cleanup/expired": {
      "post": {
        "tags": [
          "Notification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/sales": {
      "post": {
        "tags": [
          "POS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "cashierId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/sales/{id}": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/sales/number/{saleNumber}": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "saleNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/sales/{id}/print-receipt": {
      "post": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/sales/{id}/receipt": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptDataDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptDataDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReceiptDataDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/sales/{id}/cancel": {
      "post": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSaleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSaleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSaleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/sales/{id}/refund": {
      "post": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundSaleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundSaleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefundSaleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/reports/summary": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleSummaryDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleSummaryDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleSummaryDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/reports/daily-sales": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DailySalesDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailySalesDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailySalesDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/reports/payment-methods": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodSummaryDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodSummaryDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethodSummaryDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/validate-stock": {
      "post": {
        "tags": [
          "POS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateSaleItemRequest"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateSaleItemRequest"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateSaleItemRequest"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/calculate-total": {
      "post": {
        "tags": [
          "POS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateTotalRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateTotalRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CalculateTotalRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DecimalApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecimalApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecimalApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/products/{productId}/available-batches": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/products/{productId}/fifo-suggestions": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "quantity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BatchAllocationDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchAllocationDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchAllocationDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/sales-with-batches": {
      "post": {
        "tags": [
          "POS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleWithBatchesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleWithBatchesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleWithBatchesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleWithBatchesResponseDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleWithBatchesResponseDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleWithBatchesResponseDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/validate-batch-allocation": {
      "post": {
        "tags": [
          "POS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateBatchAllocationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateBatchAllocationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateBatchAllocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BatchAllocationValidationDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchAllocationValidationDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchAllocationValidationDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/sales/{saleId}/batch-summary": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "saleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleItemWithBatchDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleItemWithBatchDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleItemWithBatchDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/validate-member-credit": {
      "post": {
        "tags": [
          "POS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditValidationRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditValidationRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreditValidationRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreditValidationResultDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditValidationResultDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditValidationResultDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/create-sale-with-credit": {
      "post": {
        "tags": [
          "POS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleWithCreditDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleWithCreditDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSaleWithCreditDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/apply-credit-payment": {
      "post": {
        "tags": [
          "POS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyCreditPaymentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyCreditPaymentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyCreditPaymentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResultDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/member-credit-lookup/{identifier}": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/POSMemberCreditDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSMemberCreditDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/POSMemberCreditDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/sales/{id}/credit-info": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SaleCreditInfoDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleCreditInfoDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaleCreditInfoDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/member/{memberId}/credit-eligibility": {
      "get": {
        "tags": [
          "POS"
        ],
        "parameters": [
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MemberCreditEligibilityDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberCreditEligibilityDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberCreditEligibilityDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/POS/admin/apply-credit-migration": {
      "post": {
        "tags": [
          "POS"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Sale": {
      "post": {
        "tags": [
          "POS"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchAwareSaleRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchAwareSaleRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BranchAwareSaleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "branchIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListResponseApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListResponseApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListResponseApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/barcode/{barcode}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/{id}/stock": {
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/alerts/low-stock": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "threshold",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/alerts/out-of-stock": {
      "get": {
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{id}/history": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryMutationDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryMutationDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryMutationDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/reports/inventory-value": {
      "get": {
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DecimalApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecimalApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecimalApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/validate/barcode/{barcode}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/fifo/recommendations": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FifoRecommendationDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FifoRecommendationDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FifoRecommendationDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/expiry/warning": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "warningDays",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 7
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/expiry/expired": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExpiredProductDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpiredProductDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpiredProductDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{productId}/batches": {
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductBatchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductBatchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductBatchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeExpired",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "includeDisposed",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{productId}/batches/{batchId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductBatchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductBatchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductBatchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductBatchDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{productId}/batches/{batchId}/dispose": {
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisposeBatchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DisposeBatchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DisposeBatchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/analytics/expiry": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ExpiryAnalyticsDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpiryAnalyticsDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpiryAnalyticsDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{productId}/requires-expiry": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/with-batch-summary": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "CategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HasExpiredBatches",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasCriticalBatches",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasBatches",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWithBatchSummaryDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWithBatchSummaryDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductWithBatchSummaryDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{productId}/add-stock": {
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStockToBatchRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStockToBatchRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddStockToBatchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AddStockResponseDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddStockResponseDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddStockResponseDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{productId}/fifo-recommendations": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestedQuantity",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BatchFifoRecommendationDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchFifoRecommendationDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchFifoRecommendationDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{productId}/generate-batch-number": {
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateBatchNumberRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateBatchNumberRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateBatchNumberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateBatchNumberResponseDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateBatchNumberResponseDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateBatchNumberResponseDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{id}/stock/adjust": {
      "post": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockAdjustmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StockAdjustmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StockAdjustmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PushNotification/subscribe": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscriptionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscriptionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscriptionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PushNotification/unsubscribe": {
      "delete": {
        "tags": [
          "PushNotification"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PushNotification/subscription": {
      "get": {
        "tags": [
          "PushNotification"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "PushNotification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscriptionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscriptionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscriptionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PushNotification/send/{userId}": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationPayload"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationPayload"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PushNotification/send-bulk": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkNotificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkNotificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PushNotification/send-to-roles": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "parameters": [
          {
            "name": "Title",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "Body",
            "in": "query",
            "required": true,
            "schema": {
              "maxLength": 500,
              "type": "string"
            }
          },
          {
            "name": "Icon",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Badge",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Image",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Url",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequireInteraction",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Silent",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Vibrate",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "Data",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": { }
            }
          },
          {
            "name": "Actions",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NotificationActionDto"
              }
            }
          },
          {
            "name": "Priority",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/NotificationPriority"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PushNotification/test": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PushNotification/supported-services": {
      "get": {
        "tags": [
          "PushNotification"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PushNotification/validate-subscription": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscriptionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscriptionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PushSubscriptionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PushNotification/business/product-expiry": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "expiryDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "daysUntilExpiry",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PushNotification/business/facture-due": {
      "post": {
        "tags": [
          "PushNotification"
        ],
        "parameters": [
          {
            "name": "factureId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dueDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "amount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "supplierName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PWA/version": {
      "get": {
        "tags": [
          "PWA"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PWA/critical-resources": {
      "get": {
        "tags": [
          "PWA"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PWA/check-update": {
      "get": {
        "tags": [
          "PWA"
        ],
        "parameters": [
          {
            "name": "currentVersion",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PWA/sync": {
      "post": {
        "tags": [
          "PWA"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfflineSyncRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OfflineSyncRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OfflineSyncRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PWA/offline-config": {
      "get": {
        "tags": [
          "PWA"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PWA/essential-data": {
      "get": {
        "tags": [
          "PWA"
        ],
        "parameters": [
          {
            "name": "lastSync",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PWA/upload-offline-data": {
      "post": {
        "tags": [
          "PWA"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": { }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/PWA/manifest": {
      "get": {
        "tags": [
          "PWA"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SmartNotification/intelligent": {
      "get": {
        "tags": [
          "SmartNotification"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SmartNotificationDtoListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartNotificationDtoListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartNotificationDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SmartNotification/process-rules": {
      "post": {
        "tags": [
          "SmartNotification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SmartNotification/escalations": {
      "post": {
        "tags": [
          "SmartNotification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EscalationAlertListApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EscalationAlertListApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EscalationAlertListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SmartNotification/preferences/{userId}": {
      "get": {
        "tags": [
          "SmartNotification"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferencesDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferencesDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationPreferencesDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SmartNotification/critical-expiry-alerts": {
      "post": {
        "tags": [
          "SmartNotification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/SmartNotification/health": {
      "get": {
        "tags": [
          "SmartNotification"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationHealthDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationHealthDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationHealthDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Supplier": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Name"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Supplier"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSupplierDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/{id}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSupplierDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/code/{code}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/{id}/status": {
      "patch": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierStatusDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierStatusDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/branch/{branchId}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeAll",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "activeOnly",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/payment-terms": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "minDays",
            "in": "query",
            "schema": {
              "maximum": 365,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "maxDays",
            "in": "query",
            "schema": {
              "maximum": 365,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 365
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/credit-limit": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "minCreditLimit",
            "in": "query",
            "schema": {
              "maximum": 999999999,
              "minimum": 0,
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/validate/code/{code}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/validate/company": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "excludeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/validate/email": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/stats": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/alerts": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/generate-code": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/{id}/branches": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignSupplierToBranchesRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignSupplierToBranchesRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignSupplierToBranchesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Supplier/{id}/performance": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Transfer": {
      "get": {
        "tags": [
          "Transfer"
        ],
        "parameters": [
          {
            "name": "branchIds",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Transfer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Transfer/{id}": {
      "get": {
        "tags": [
          "Transfer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Transfer/{id}/status": {
      "put": {
        "tags": [
          "Transfer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransferStatusRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransferStatusRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransferStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Transfer/{id}/complete": {
      "put": {
        "tags": [
          "Transfer"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteTransferRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteTransferRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteTransferRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "UserAdmin"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/users/{id}": {
      "put": {
        "tags": [
          "UserAdmin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "UserAdmin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/logs": {
      "get": {
        "tags": [
          "UserAdmin"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/logs/export": {
      "get": {
        "tags": [
          "UserAdmin"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/users/{id}/restore": {
      "put": {
        "tags": [
          "UserAdmin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/users/deleted": {
      "get": {
        "tags": [
          "UserAdmin"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/debug-auth": {
      "get": {
        "tags": [
          "UserAdmin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/admin/permissions": {
      "get": {
        "tags": [
          "UserAdmin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/assign": {
      "post": {
        "tags": [
          "UserBranchAssignment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUserToBranchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUserToBranchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignUserToBranchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/bulk-assign": {
      "post": {
        "tags": [
          "UserBranchAssignment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkAssignUsersToBranchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkAssignUsersToBranchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkAssignUsersToBranchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/update-access": {
      "put": {
        "tags": [
          "UserBranchAssignment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchAccessDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchAccessDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBranchAccessDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/user/{userId}/status": {
      "get": {
        "tags": [
          "UserBranchAssignment"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/branch/{branchId}/users": {
      "get": {
        "tags": [
          "UserBranchAssignment"
        ],
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/users": {
      "get": {
        "tags": [
          "UserBranchAssignment"
        ],
        "parameters": [
          {
            "name": "BranchId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Role",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "CanAccessMultipleBranches",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IsActive",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasBranchAssignment",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Search",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SortOrder",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/unassign/{userId}": {
      "delete": {
        "tags": [
          "UserBranchAssignment"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/unassigned": {
      "get": {
        "tags": [
          "UserBranchAssignment"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/validate-access/{userId}/{branchId}": {
      "get": {
        "tags": [
          "UserBranchAssignment"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/user/{userId}/accessible-branches": {
      "get": {
        "tags": [
          "UserBranchAssignment"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/auto-assign/{userId}": {
      "post": {
        "tags": [
          "UserBranchAssignment"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/fix-null-assignments": {
      "post": {
        "tags": [
          "UserBranchAssignment"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/my-status": {
      "get": {
        "tags": [
          "UserBranchAssignment"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserBranchAssignment/my-accessible-branches": {
      "get": {
        "tags": [
          "UserBranchAssignment"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/UserProfile": {
      "get": {
        "tags": [
          "UserProfile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UserProfile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserProfileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDtoApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDtoApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/UserProfile/upload-photo": {
      "post": {
        "tags": [
          "UserProfile"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Photo"
                ],
                "type": "object",
                "properties": {
                  "Photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Photo": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/UserProfile/photo": {
      "delete": {
        "tags": [
          "UserProfile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/UserProfile/debug/upload-info": {
      "get": {
        "tags": [
          "UserProfile"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActionTimeline": {
        "type": "object",
        "properties": {
          "optimalActionDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastActionDate": {
            "type": "string",
            "format": "date-time"
          },
          "daysRemaining": {
            "type": "integer",
            "format": "int32"
          },
          "urgency": {
            "type": "string",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimelineEvent"
            },
            "nullable": true
          },
          "isActionable": {
            "type": "boolean"
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          },
          "immediateAction": {
            "type": "string",
            "nullable": true
          },
          "shortTerm": {
            "type": "string",
            "nullable": true
          },
          "mediumTerm": {
            "type": "string",
            "nullable": true
          },
          "reviewDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AddPointsRequest": {
        "type": "object",
        "properties": {
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "saleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddStockResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "batchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "addedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "newBatchStock": {
            "type": "integer",
            "format": "int32"
          },
          "newProductTotalStock": {
            "type": "integer",
            "format": "int32"
          },
          "weightedAverageCost": {
            "type": "number",
            "format": "double"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddStockResponseDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/AddStockResponseDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AddStockToBatchRequest": {
        "required": [
          "costPerUnit",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "costPerUnit": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "batchNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "nullable": true
          },
          "productionDate": {
            "type": "string",
            "nullable": true
          },
          "supplierName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "purchaseOrderNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AffectedBatch": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AlertCategoryDto": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplyCreditPaymentDto": {
        "required": [
          "creditAmount",
          "memberId",
          "processedBy",
          "saleId"
        ],
        "type": "object",
        "properties": {
          "saleId": {
            "type": "integer",
            "format": "int32"
          },
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "creditAmount": {
            "maximum": 999999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "processedBy": {
            "type": "integer",
            "format": "int32"
          },
          "validationId": {
            "type": "string",
            "nullable": true
          },
          "isPartialPayment": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "processingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "requiresApproval": {
            "type": "boolean"
          },
          "managerUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvalNotes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignSupplierToBranchesRequest": {
        "type": "object",
        "properties": {
          "branchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignUserToBranchDto": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "canAccessMultipleBranches": {
            "type": "boolean"
          },
          "accessibleBranchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutoGenerateEventsDto": {
        "type": "object",
        "properties": {
          "generateProductExpiry": {
            "type": "boolean"
          },
          "generateFactureDue": {
            "type": "boolean"
          },
          "generateMemberPayments": {
            "type": "boolean"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "overwriteExisting": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AvailableSourceDto": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "availableStock": {
            "type": "integer",
            "format": "int32"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "estimatedCost": {
            "type": "number",
            "format": "double"
          },
          "estimatedDeliveryDays": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AvailableSourceDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableSourceDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchAllocationDto": {
        "required": [
          "batchId",
          "batchNumber",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "minLength": 1,
            "type": "string"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "daysUntilExpiry": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "urgencyClass": {
            "type": "string",
            "nullable": true
          },
          "urgencyIcon": {
            "type": "string",
            "nullable": true
          },
          "expiryText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchAllocationDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchAllocationDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchAllocationValidationDto": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchAllocationValidationDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/BatchAllocationValidationDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchFifoRecommendationDto": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "currentStock": {
            "type": "integer",
            "format": "int32"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "daysUntilExpiry": {
            "type": "integer",
            "format": "int32"
          },
          "urgency": {
            "type": "string",
            "nullable": true
          },
          "urgencyColor": {
            "type": "string",
            "nullable": true
          },
          "recommendationText": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BatchFifoRecommendationDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchFifoRecommendationDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchRecommendationDto": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "availableStock": {
            "type": "integer",
            "format": "int32"
          },
          "costPerUnit": {
            "type": "number",
            "format": "double"
          },
          "expiryStatus": {
            "$ref": "#/components/schemas/ExpiryStatus"
          },
          "daysUntilExpiry": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "recommendedSaleOrder": {
            "type": "integer",
            "format": "int32"
          },
          "recommendationReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BenchmarkMetricsDto": {
        "type": "object",
        "properties": {
          "averageWastagePercentage": {
            "type": "number",
            "format": "double"
          },
          "bestWastagePercentage": {
            "type": "number",
            "format": "double"
          },
          "systemFifoCompliance": {
            "type": "number",
            "format": "double"
          },
          "averageInventoryTurnover": {
            "type": "number",
            "format": "double"
          },
          "topPerformerScore": {
            "type": "number",
            "format": "double"
          },
          "systemEfficiencyTarget": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BestPractice": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          },
          "practice": {
            "type": "string",
            "nullable": true
          },
          "impact": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BooleanApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Branch": {
        "required": [
          "address",
          "branchCode",
          "branchName",
          "branchType",
          "managerName",
          "phone"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "branchCode": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "branchName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "parentBranchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "parentBranch": {
            "$ref": "#/components/schemas/Branch"
          },
          "branchType": {
            "$ref": "#/components/schemas/BranchType"
          },
          "address": {
            "maxLength": 300,
            "minLength": 1,
            "type": "string"
          },
          "managerName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "province": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "openingDate": {
            "type": "string",
            "format": "date-time"
          },
          "storeSize": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "employeeCount": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "subBranches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Branch"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            },
            "nullable": true
          },
          "fullLocationName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isHeadOffice": {
            "type": "boolean",
            "readOnly": true
          },
          "hasUsers": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "BranchAwareSaleItemRequest": {
        "required": [
          "productId",
          "quantity",
          "subtotal",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BranchAwareSaleRequest": {
        "required": [
          "branchId",
          "items",
          "paidAmount",
          "paymentMethod",
          "subtotal",
          "total"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "memberCode": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "minLength": 1,
            "type": "string"
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "paidAmount": {
            "type": "number",
            "format": "double"
          },
          "changeAmount": {
            "type": "number",
            "format": "double"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchAwareSaleItemRequest"
            }
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchDemandForecastDto": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "productForecasts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDemandForecastDto"
            },
            "nullable": true
          },
          "totalForecastedDemand": {
            "type": "number",
            "format": "double"
          },
          "forecastConfidence": {
            "type": "number",
            "format": "double"
          },
          "forecastPeriodStart": {
            "type": "string",
            "format": "date-time"
          },
          "forecastPeriodEnd": {
            "type": "string",
            "format": "date-time"
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "BranchDemandForecastDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchDemandForecastDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchPerformanceComparisonDto": {
        "type": "object",
        "properties": {
          "analysisDate": {
            "type": "string",
            "format": "date-time"
          },
          "periodStart": {
            "type": "string",
            "format": "date-time"
          },
          "periodEnd": {
            "type": "string",
            "format": "date-time"
          },
          "branchMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchPerformanceMetricsDto"
            },
            "nullable": true
          },
          "systemBenchmarks": {
            "$ref": "#/components/schemas/BenchmarkMetricsDto"
          },
          "keyInsights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchPerformanceInsightDto"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "grossProfit": {
            "type": "number",
            "format": "double"
          },
          "netProfitMargin": {
            "type": "number",
            "format": "double"
          },
          "revenuePerSquareMeter": {
            "type": "number",
            "format": "double"
          },
          "transactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "averageTransactionValue": {
            "type": "number",
            "format": "double"
          },
          "salesPerEmployee": {
            "type": "number",
            "format": "double"
          },
          "inventoryTurnover": {
            "type": "number",
            "format": "double"
          },
          "wastagePercentage": {
            "type": "number",
            "format": "double"
          },
          "preventedLoss": {
            "type": "number",
            "format": "double"
          },
          "totalProducts": {
            "type": "integer",
            "format": "int32"
          },
          "activeProducts": {
            "type": "integer",
            "format": "int32"
          },
          "expiringProducts": {
            "type": "integer",
            "format": "int32"
          },
          "expiryRisk": {
            "type": "number",
            "format": "double"
          },
          "efficiencyScore": {
            "type": "integer",
            "format": "int32"
          },
          "profitabilityScore": {
            "type": "integer",
            "format": "int32"
          },
          "overallRating": {
            "type": "integer",
            "format": "int32"
          },
          "strengths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "improvementAreas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "recommendations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "stockoutRate": {
            "type": "number",
            "format": "double"
          },
          "excessStockValue": {
            "type": "number",
            "format": "double"
          },
          "expiryPreventionScore": {
            "type": "number",
            "format": "double"
          },
          "valuePreserved": {
            "type": "number",
            "format": "double"
          },
          "overallPerformanceScore": {
            "type": "number",
            "format": "double"
          },
          "revenueGrowth": {
            "type": "number",
            "format": "double"
          },
          "strengthAreas": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "bestPractices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BestPractice"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchPerformanceComparisonDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/BranchPerformanceComparisonDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchPerformanceInsightDto": {
        "type": "object",
        "properties": {
          "insightType": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "impact": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "affectedBranchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "actionItems": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchPerformanceMetricsDto": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "branchCode": {
            "type": "string",
            "nullable": true
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "wastageValue": {
            "type": "number",
            "format": "double"
          },
          "preventedLoss": {
            "type": "number",
            "format": "double"
          },
          "netPerformance": {
            "type": "number",
            "format": "double"
          },
          "wastagePercentage": {
            "type": "number",
            "format": "double"
          },
          "fifoComplianceRate": {
            "type": "number",
            "format": "double"
          },
          "inventoryTurnoverRate": {
            "type": "number",
            "format": "double"
          },
          "expiryPreventionRate": {
            "type": "number",
            "format": "double"
          },
          "totalTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "productsManaged": {
            "type": "integer",
            "format": "int32"
          },
          "batchesProcessed": {
            "type": "integer",
            "format": "int32"
          },
          "expiredBatches": {
            "type": "integer",
            "format": "int32"
          },
          "efficiencyScore": {
            "type": "integer",
            "format": "int32"
          },
          "profitabilityScore": {
            "type": "integer",
            "format": "int32"
          },
          "complianceScore": {
            "type": "integer",
            "format": "int32"
          },
          "overallScore": {
            "type": "integer",
            "format": "int32"
          },
          "revenueRank": {
            "type": "integer",
            "format": "int32"
          },
          "efficiencyRank": {
            "type": "integer",
            "format": "int32"
          },
          "wastageRank": {
            "type": "integer",
            "format": "int32"
          },
          "overallRank": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BranchStatusChangeDto": {
        "required": [
          "branchId",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "branchCode": {
            "type": "string",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "managerName": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchTransferOpportunityDto": {
        "type": "object",
        "properties": {
          "targetBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "targetBranchName": {
            "type": "string",
            "nullable": true
          },
          "recommendedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "transferBenefit": {
            "type": "number",
            "format": "double"
          },
          "transferReason": {
            "type": "string",
            "nullable": true
          },
          "recommendedTransferDate": {
            "type": "string",
            "format": "date-time"
          },
          "transferCost": {
            "type": "number",
            "format": "double"
          },
          "netBenefit": {
            "type": "number",
            "format": "double"
          },
          "priority": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchTransferStatsDto": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "branchCode": {
            "type": "string",
            "nullable": true
          },
          "transfersOut": {
            "type": "integer",
            "format": "int32"
          },
          "transfersIn": {
            "type": "integer",
            "format": "int32"
          },
          "outboundValue": {
            "type": "number",
            "format": "double"
          },
          "inboundValue": {
            "type": "number",
            "format": "double"
          },
          "netTransferValue": {
            "type": "number",
            "format": "double"
          },
          "averageTransferTime": {
            "type": "number",
            "format": "double"
          },
          "successRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BranchTransferStatsDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchTransferStatsDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BranchType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "BroadcastNotificationRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "actionUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BroadcastToRoleRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "actionUrl": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkAssignUsersToBranchDto": {
        "required": [
          "userIds"
        ],
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "canAccessMultipleBranches": {
            "type": "boolean"
          },
          "accessibleBranchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkEventOperationDto": {
        "required": [
          "eventIds",
          "operation"
        ],
        "type": "object",
        "properties": {
          "eventIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "operation": {
            "minLength": 1,
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkNotificationRequest": {
        "required": [
          "payload"
        ],
        "type": "object",
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/NotificationPayload"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/NotificationCategory"
          },
          "includeOfflineUsers": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BulkTransferItemDto": {
        "required": [
          "productId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BulkTransferRequestDto": {
        "required": [
          "destinationBranchId",
          "productTransfers",
          "requestReason",
          "sourceBranchId"
        ],
        "type": "object",
        "properties": {
          "sourceBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "destinationBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "requestReason": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "notes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/TransferPriority"
          },
          "productTransfers": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkTransferItemDto"
            }
          }
        },
        "additionalProperties": false
      },
      "BusinessImpact": {
        "type": "object",
        "properties": {
          "financialRisk": {
            "type": "number",
            "format": "double"
          },
          "operationalImpact": {
            "type": "string",
            "nullable": true
          },
          "customerImpact": {
            "type": "string",
            "nullable": true
          },
          "complianceRisk": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CalculateTotalRequest": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSaleItemRequest"
            },
            "nullable": true
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CalendarEventType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "format": "int32"
      },
      "CancelSaleRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelTransferRequestDto": {
        "required": [
          "cancellationReason"
        ],
        "type": "object",
        "properties": {
          "cancellationReason": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Category": {
        "required": [
          "color",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "color": {
            "minLength": 1,
            "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "requiresExpiryDate": {
            "type": "boolean"
          },
          "defaultExpiryWarningDays": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "requiresExpiryDate": {
            "type": "boolean"
          },
          "defaultExpiryWarningDays": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "productCount": {
            "type": "integer",
            "format": "int32"
          },
          "expiringProductsCount": {
            "type": "integer",
            "format": "int32"
          },
          "expiredProductsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CategoryExpiryAnalyticsDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryColor": {
            "type": "string",
            "nullable": true
          },
          "stockValue": {
            "type": "number",
            "format": "double"
          },
          "valueAtRisk": {
            "type": "number",
            "format": "double"
          },
          "wastagePercentage": {
            "type": "number",
            "format": "double"
          },
          "totalBatches": {
            "type": "integer",
            "format": "int32"
          },
          "expiringBatches": {
            "type": "integer",
            "format": "int32"
          },
          "expiredBatches": {
            "type": "integer",
            "format": "int32"
          },
          "averageShelfLife": {
            "type": "number",
            "format": "double"
          },
          "optimalTurnoverRate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CategoryExpiryPerformance": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "totalValue": {
            "type": "number",
            "format": "double"
          },
          "expiredValue": {
            "type": "number",
            "format": "double"
          },
          "wastagePercentage": {
            "type": "number",
            "format": "double"
          },
          "totalBatches": {
            "type": "integer",
            "format": "int32"
          },
          "expiredBatches": {
            "type": "integer",
            "format": "int32"
          },
          "averageShelfLife": {
            "type": "number",
            "format": "double"
          },
          "performance": {
            "type": "string",
            "nullable": true
          },
          "nearExpiryBatches": {
            "type": "integer",
            "format": "int32"
          },
          "wastePercentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CategoryExpiryStatsDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryColor": {
            "type": "string",
            "nullable": true
          },
          "totalProducts": {
            "type": "integer",
            "format": "int32"
          },
          "expiringProducts": {
            "type": "integer",
            "format": "int32"
          },
          "expiredProducts": {
            "type": "integer",
            "format": "int32"
          },
          "valueAtRisk": {
            "type": "number",
            "format": "double"
          },
          "valueLost": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CategoryInventoryDto": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryColor": {
            "type": "string",
            "nullable": true
          },
          "productCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalValue": {
            "type": "number",
            "format": "double"
          },
          "lowStockCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CategoryListDto": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CategoryPerformanceDto": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryColor": {
            "type": "string",
            "nullable": true
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "totalItemsSold": {
            "type": "integer",
            "format": "int32"
          },
          "productCount": {
            "type": "integer",
            "format": "int32"
          },
          "averagePrice": {
            "type": "number",
            "format": "double"
          },
          "growthPercentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CategorySalesDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryColor": {
            "type": "string",
            "nullable": true
          },
          "totalQuantitySold": {
            "type": "integer",
            "format": "int32"
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "productCount": {
            "type": "integer",
            "format": "int32"
          },
          "transactionCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CategorySalesDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategorySalesDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategorySpendingDto": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "facturesCount": {
            "type": "integer",
            "format": "int32"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CategoryWithExpiryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "defaultExpiryWarningDays": {
            "type": "integer",
            "format": "int32"
          },
          "productsWithExpiryCount": {
            "type": "integer",
            "format": "int32"
          },
          "expiringProductsCount": {
            "type": "integer",
            "format": "int32"
          },
          "expiredProductsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ChartDataDto": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "color": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChartDataDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartDataDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompleteTransferItemRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "transferredQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompleteTransferRequest": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompleteTransferItemRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComprehensiveExpiryAnalyticsDto": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "analysisTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "analysisDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalBatchesWithExpiry": {
            "type": "integer",
            "format": "int32"
          },
          "expiredBatches": {
            "type": "integer",
            "format": "int32"
          },
          "expiringNext7Days": {
            "type": "integer",
            "format": "int32"
          },
          "expiringNext30Days": {
            "type": "integer",
            "format": "int32"
          },
          "expiredStockValue": {
            "type": "number",
            "format": "double"
          },
          "atRiskStockValue": {
            "type": "number",
            "format": "double"
          },
          "monthlyExpiryRate": {
            "type": "number",
            "format": "double"
          },
          "preventionOpportunityValue": {
            "type": "number",
            "format": "double"
          },
          "categoryPerformance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryExpiryPerformance"
            },
            "nullable": true
          },
          "expiryTrends": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpiryTrendData"
            },
            "nullable": true
          },
          "actionableRecommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpiryActionRecommendation"
            },
            "nullable": true
          },
          "projectedExpiryNext30Days": {
            "type": "integer",
            "format": "int32"
          },
          "estimatedSavingsOpportunity": {
            "type": "number",
            "format": "double"
          },
          "totalStockValue": {
            "type": "number",
            "format": "double"
          },
          "valueAtRiskNext7Days": {
            "type": "number",
            "format": "double"
          },
          "valueAtRiskNext30Days": {
            "type": "number",
            "format": "double"
          },
          "valueExpiredLast30Days": {
            "type": "number",
            "format": "double"
          },
          "wastePreventionOpportunity": {
            "type": "number",
            "format": "double"
          },
          "wastagePercentage": {
            "type": "number",
            "format": "double"
          },
          "expiryPreventionRate": {
            "type": "number",
            "format": "double"
          },
          "recoveryRate": {
            "type": "number",
            "format": "double"
          },
          "fifoComplianceScore": {
            "type": "integer",
            "format": "int32"
          },
          "totalBatchesTracked": {
            "type": "integer",
            "format": "int32"
          },
          "batchesExpiringToday": {
            "type": "integer",
            "format": "int32"
          },
          "batchesExpiringThisWeek": {
            "type": "integer",
            "format": "int32"
          },
          "batchesExpiringThisMonth": {
            "type": "integer",
            "format": "int32"
          },
          "expiredBatchesPendingDisposal": {
            "type": "integer",
            "format": "int32"
          },
          "categoryAnalytics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryExpiryAnalyticsDto"
            },
            "nullable": true
          },
          "highRiskBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HighRiskBatchDto"
            },
            "nullable": true
          },
          "recommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpiryRecommendationDto"
            },
            "nullable": true
          },
          "wastageTrend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpiryTrendPointDto"
            },
            "nullable": true
          },
          "preventionTrend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpiryTrendPointDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComprehensiveExpiryAnalyticsDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/ComprehensiveExpiryAnalyticsDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConfirmPaymentDto": {
        "required": [
          "paymentId",
          "supplierAckReference"
        ],
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierAckReference": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "confirmationNotes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "confirmationFile": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CoordinationHealthDto": {
        "type": "object",
        "properties": {
          "totalTransferRecommendations": {
            "type": "integer",
            "format": "int32"
          },
          "highPriorityTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "totalOptimizationOpportunities": {
            "type": "integer",
            "format": "int32"
          },
          "highImpactOpportunities": {
            "type": "integer",
            "format": "int32"
          },
          "totalPotentialSavings": {
            "type": "number",
            "format": "double"
          },
          "systemEfficiencyScore": {
            "type": "number",
            "format": "double"
          },
          "lastUpdateTimestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CoordinationHealthDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/CoordinationHealthDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateBranchDto": {
        "required": [
          "address",
          "branchCode",
          "branchName",
          "branchType",
          "city",
          "managerName",
          "phone",
          "postalCode",
          "province"
        ],
        "type": "object",
        "properties": {
          "branchCode": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "branchName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "branchType": {
            "$ref": "#/components/schemas/BranchType"
          },
          "address": {
            "maxLength": 300,
            "minLength": 1,
            "type": "string"
          },
          "managerName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "phone": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "province": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "openingDate": {
            "type": "string",
            "format": "date-time"
          },
          "storeSize": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "employeeCount": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateCalendarEventDto": {
        "required": [
          "eventType",
          "startDate",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isAllDay": {
            "type": "boolean"
          },
          "eventType": {
            "$ref": "#/components/schemas/CalendarEventType"
          },
          "priority": {
            "$ref": "#/components/schemas/EventPriority"
          },
          "actionUrl": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "relatedEntityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relatedEntityType": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasReminder": {
            "type": "boolean"
          },
          "reminderMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "color": {
            "maxLength": 7,
            "type": "string",
            "nullable": true
          },
          "recurrencePattern": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCategoryDto": {
        "required": [
          "color",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "color": {
            "minLength": 1,
            "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "requiresExpiryDate": {
            "type": "boolean"
          },
          "defaultExpiryWarningDays": {
            "maximum": 365,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateFactureItemDto": {
        "required": [
          "quantity",
          "supplierItemDescription",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "supplierItemCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "supplierItemDescription": {
            "maxLength": 500,
            "minLength": 3,
            "type": "string"
          },
          "quantity": {
            "maximum": 999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "maximum": 999999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "taxRate": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "maximum": 999999999.99,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "notes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateInventoryTransferRequestDto": {
        "required": [
          "destinationBranchId",
          "priority",
          "requestReason",
          "sourceBranchId",
          "transferItems",
          "type"
        ],
        "type": "object",
        "properties": {
          "sourceBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "destinationBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/TransferType"
          },
          "priority": {
            "$ref": "#/components/schemas/TransferPriority"
          },
          "requestReason": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "notes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "estimatedCost": {
            "type": "number",
            "format": "double"
          },
          "estimatedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "transferItems": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTransferItemDto"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateMemberRequest": {
        "required": [
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "format": "tel"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "address": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateNotificationRequest": {
        "required": [
          "message",
          "title",
          "type"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "title": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "message": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "actionUrl": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "actionText": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProductBatchDto": {
        "required": [
          "batchNumber",
          "initialStock",
          "productId"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "initialStock": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "costPerUnit": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "supplierName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "purchaseOrderNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProductRequest": {
        "required": [
          "barcode",
          "buyPrice",
          "categoryId",
          "name",
          "sellPrice",
          "stock"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "barcode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "buyPrice": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "sellPrice": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "stock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "minimumStock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "minStock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "maxStock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateSaleItemRequest": {
        "required": [
          "productId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "discount": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "sellPrice": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateSaleRequest": {
        "required": [
          "amountPaid",
          "items",
          "paymentMethod",
          "subtotal",
          "total"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "memberCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateSaleItemRequest"
            }
          },
          "subtotal": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "tax": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "discount": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "total": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "paymentMethod": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "paymentReference": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "amountPaid": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "memberId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "discountAmount": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "taxAmount": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          },
          "paidAmount": {
            "type": "number",
            "format": "double"
          },
          "changeAmount": {
            "type": "number",
            "format": "double"
          },
          "redeemedPoints": {
            "type": "integer",
            "format": "int32"
          },
          "memberCreditUsed": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CreateSaleWithBatchesRequest": {
        "required": [
          "items",
          "paymentMethod",
          "receivedAmount",
          "total"
        ],
        "type": "object",
        "properties": {
          "total": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "paymentMethod": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "receivedAmount": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "change": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "memberId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "items": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemWithBatchesDto"
            }
          }
        },
        "additionalProperties": false
      },
      "CreateSaleWithCreditDto": {
        "required": [
          "branchId",
          "cashierId",
          "creditAmount",
          "items",
          "memberId",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemDto"
            }
          },
          "totalAmount": {
            "maximum": 999999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "creditAmount": {
            "maximum": 999999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "cashAmount": {
            "maximum": 999999999.99,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "cashierId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "validationId": {
            "type": "string",
            "nullable": true
          },
          "isManagerApproved": {
            "type": "boolean"
          },
          "approvedByManagerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvalNotes": {
            "type": "string",
            "nullable": true
          },
          "customerNotes": {
            "type": "string",
            "nullable": true
          },
          "discountAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "receiptNumber": {
            "type": "string",
            "nullable": true
          },
          "customDueDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "useCustomDueDate": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateSupplierDto": {
        "required": [
          "companyName",
          "contactPerson",
          "creditLimit",
          "email",
          "paymentTerms",
          "phone"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "contactPerson": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "phone": {
            "maxLength": 15,
            "minLength": 10,
            "type": "string",
            "format": "tel"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "address": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "paymentTerms": {
            "maximum": 365,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "creditLimit": {
            "maximum": 999999999,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CreateTransferItemDto": {
        "required": [
          "productId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "batchNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "qualityNotes": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTransferItemRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "requestedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTransferRequest": {
        "type": "object",
        "properties": {
          "sourceBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "targetBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTransferItemRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreditStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "CreditTransactionStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "CreditTransactionType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "CreditValidationRequestDto": {
        "required": [
          "branchId",
          "memberId",
          "requestedAmount"
        ],
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "requestedAmount": {
            "maximum": 999999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemDto"
            },
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "overrideWarnings": {
            "type": "boolean"
          },
          "managerUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreditValidationResultDto": {
        "type": "object",
        "properties": {
          "isApproved": {
            "type": "boolean"
          },
          "approvedAmount": {
            "type": "number",
            "format": "double"
          },
          "availableCredit": {
            "type": "number",
            "format": "double"
          },
          "decisionReason": {
            "type": "string",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "requiresManagerApproval": {
            "type": "boolean"
          },
          "maxAllowedAmount": {
            "type": "number",
            "format": "double"
          },
          "riskLevel": {
            "type": "string",
            "nullable": true
          },
          "memberName": {
            "type": "string",
            "nullable": true
          },
          "memberTier": {
            "type": "string",
            "nullable": true
          },
          "creditScore": {
            "type": "integer",
            "format": "int32"
          },
          "creditUtilization": {
            "type": "number",
            "format": "double"
          },
          "validationTimestamp": {
            "type": "string",
            "format": "date-time"
          },
          "validatedByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "validationId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreditValidationResultDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/CreditValidationResultDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CrossBranchOpportunityDto": {
        "type": "object",
        "properties": {
          "opportunityType": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "potentialSavings": {
            "type": "number",
            "format": "double"
          },
          "implementationCost": {
            "type": "number",
            "format": "double"
          },
          "netBenefit": {
            "type": "number",
            "format": "double"
          },
          "estimatedBenefit": {
            "type": "number",
            "format": "double"
          },
          "impact": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "complexity": {
            "type": "string",
            "nullable": true
          },
          "affectedBranchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "requiredActions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "recommendedImplementationDate": {
            "type": "string",
            "format": "date-time"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "confidenceScore": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CrossBranchOpportunityDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossBranchOpportunityDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerReportDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalActiveMembers": {
            "type": "integer",
            "format": "int32"
          },
          "newMembersThisPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "averageOrderValue": {
            "type": "number",
            "format": "double"
          },
          "totalMemberRevenue": {
            "type": "number",
            "format": "double"
          },
          "guestRevenue": {
            "type": "number",
            "format": "double"
          },
          "topCustomers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopCustomerDto"
            },
            "nullable": true
          },
          "loyaltyAnalysis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberLoyaltyDto"
            },
            "nullable": true
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CustomerReportDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/CustomerReportDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DailySalesDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "totalSales": {
            "type": "number",
            "format": "double"
          },
          "transactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "averageTransaction": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DailySalesDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailySalesDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DashboardKPIDto": {
        "type": "object",
        "properties": {
          "todayRevenue": {
            "type": "number",
            "format": "double"
          },
          "monthlyRevenue": {
            "type": "number",
            "format": "double"
          },
          "yearlyRevenue": {
            "type": "number",
            "format": "double"
          },
          "todayTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "averageTransactionValue": {
            "type": "number",
            "format": "double"
          },
          "totalProfit": {
            "type": "number",
            "format": "double"
          },
          "totalProducts": {
            "type": "integer",
            "format": "int32"
          },
          "lowStockProducts": {
            "type": "integer",
            "format": "int32"
          },
          "totalMembers": {
            "type": "integer",
            "format": "int32"
          },
          "inventoryValue": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DashboardKPIDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/DashboardKPIDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DecimalApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "number",
            "format": "double"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DemandDataPointDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "forecastedDemand": {
            "type": "number",
            "format": "double"
          },
          "confidenceInterval": {
            "type": "number",
            "format": "double"
          },
          "forecastType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisposalUrgency": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "DisposeBatchDto": {
        "required": [
          "disposalMethod"
        ],
        "type": "object",
        "properties": {
          "disposalMethod": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "disposalReason": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "forceDisposal": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DisposeExpiredProductsDto": {
        "required": [
          "batchIds",
          "disposalMethod"
        ],
        "type": "object",
        "properties": {
          "batchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "disposalMethod": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DisputeFactureDto": {
        "required": [
          "disputeReason",
          "factureId"
        ],
        "type": "object",
        "properties": {
          "factureId": {
            "type": "integer",
            "format": "int32"
          },
          "disputeReason": {
            "maxLength": 1000,
            "minLength": 10,
            "type": "string"
          },
          "additionalNotes": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "supportingDocuments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DistributionMetricsDto": {
        "type": "object",
        "properties": {
          "totalInventoryValue": {
            "type": "number",
            "format": "double"
          },
          "averageWastageRate": {
            "type": "number",
            "format": "double"
          },
          "distributionEfficiency": {
            "type": "number",
            "format": "double"
          },
          "stockBalance": {
            "type": "number",
            "format": "double"
          },
          "optimalDistributionScore": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DistributionRecommendationDto": {
        "type": "object",
        "properties": {
          "actionType": {
            "type": "string",
            "nullable": true
          },
          "sourceBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "sourceBranchName": {
            "type": "string",
            "nullable": true
          },
          "targetBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "targetBranchName": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "estimatedBenefit": {
            "type": "number",
            "format": "double"
          },
          "rationale": {
            "type": "string",
            "nullable": true
          },
          "recommendedExecutionDate": {
            "type": "string",
            "format": "date-time"
          },
          "priority": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencyTransferRequestDto": {
        "required": [
          "destinationBranchId",
          "productId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "destinationBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EmergencyTransferSuggestionDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "criticalBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "criticalBranchName": {
            "type": "string",
            "nullable": true
          },
          "currentStock": {
            "type": "integer",
            "format": "int32"
          },
          "minimumStock": {
            "type": "integer",
            "format": "int32"
          },
          "daysUntilStockout": {
            "type": "integer",
            "format": "int32"
          },
          "availableSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableSourceDto"
            },
            "nullable": true
          },
          "alertLevel": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmergencyTransferSuggestionDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmergencyTransferSuggestionDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EscalationAlert": {
        "type": "object",
        "properties": {
          "originalNotificationId": {
            "type": "integer",
            "format": "int32"
          },
          "escalatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "escalationReason": {
            "type": "string",
            "nullable": true
          },
          "escalatedToUserCount": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EscalationAlertListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EscalationAlert"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EscalationRule": {
        "type": "object",
        "properties": {
          "escalateAfterHours": {
            "type": "integer",
            "format": "int32"
          },
          "escalateToRoles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "requireAcknowledgment": {
            "type": "boolean"
          },
          "notificationChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationChannel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventPriority": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ExecutedActionDto": {
        "type": "object",
        "properties": {
          "actionType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isSuccess": {
            "type": "boolean"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "result": {
            "type": "string",
            "nullable": true
          },
          "executedAt": {
            "type": "string",
            "format": "date-time"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpiredProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productBarcode": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "daysExpired": {
            "type": "integer",
            "format": "int32"
          },
          "currentStock": {
            "type": "integer",
            "format": "int32"
          },
          "valueLost": {
            "type": "number",
            "format": "double"
          },
          "costPerUnit": {
            "type": "number",
            "format": "double"
          },
          "expiredAt": {
            "type": "string",
            "format": "date-time"
          },
          "requiresDisposal": {
            "type": "boolean"
          },
          "disposalUrgency": {
            "$ref": "#/components/schemas/DisposalUrgency"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "isDisposed": {
            "type": "boolean"
          },
          "disposalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disposalMethod": {
            "type": "string",
            "nullable": true
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpiredProductDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpiredProductDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpiredProductsFilterDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDisposed": {
            "type": "boolean",
            "nullable": true
          },
          "expiredAfter": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiredBefore": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "sortBy": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpiringProductsFilterDto": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiryStatus": {
            "$ref": "#/components/schemas/ExpiryStatus"
          },
          "daysUntilExpiry": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "includeBlocked": {
            "type": "boolean",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "sortBy": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpiryActionRecommendation": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "daysToExpiry": {
            "type": "integer",
            "format": "int32"
          },
          "currentValue": {
            "type": "number",
            "format": "double"
          },
          "actionType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "expectedBenefit": {
            "type": "number",
            "format": "double"
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "recommendedDate": {
            "type": "string",
            "format": "date-time"
          },
          "affectedBatchesCount": {
            "type": "integer",
            "format": "int32"
          },
          "potentialSavings": {
            "type": "number",
            "format": "double"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "actionItems": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpiryAnalyticsDto": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "analysisDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalProductsWithExpiry": {
            "type": "integer",
            "format": "int32"
          },
          "expiringIn7Days": {
            "type": "integer",
            "format": "int32"
          },
          "expiringIn3Days": {
            "type": "integer",
            "format": "int32"
          },
          "expiredProducts": {
            "type": "integer",
            "format": "int32"
          },
          "disposedProducts": {
            "type": "integer",
            "format": "int32"
          },
          "valueAtRisk": {
            "type": "number",
            "format": "double"
          },
          "valueLost": {
            "type": "number",
            "format": "double"
          },
          "wastagePercentage": {
            "type": "number",
            "format": "double"
          },
          "categoryStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryExpiryStatsDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpiryAnalyticsDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/ExpiryAnalyticsDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpiryRecommendationDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "potentialSavings": {
            "type": "number",
            "format": "double"
          },
          "actionUrl": {
            "type": "string",
            "nullable": true
          },
          "affectedBatchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpiryStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "ExpiryTrendData": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "format": "date-time"
          },
          "expiredValue": {
            "type": "number",
            "format": "double"
          },
          "expiredBatches": {
            "type": "integer",
            "format": "int32"
          },
          "wastagePercentage": {
            "type": "number",
            "format": "double"
          },
          "trendDirection": {
            "type": "number",
            "format": "double"
          },
          "trendIndicator": {
            "type": "string",
            "nullable": true
          },
          "period": {
            "type": "string",
            "nullable": true
          },
          "periodDisplay": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExpiryTrendPointDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "metricType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExportParams": {
        "required": [
          "exportFormat",
          "reportType"
        ],
        "type": "object",
        "properties": {
          "reportType": {
            "minLength": 1,
            "type": "string"
          },
          "exportFormat": {
            "minLength": 1,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateRange": {
            "type": "string",
            "nullable": true
          },
          "branchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "province": {
            "type": "string",
            "nullable": true
          },
          "includeCharts": {
            "type": "boolean"
          },
          "includeDetails": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "FactureDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "supplierInvoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "internalReferenceNumber": {
            "type": "string",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "supplierCode": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "branchDisplay": {
            "type": "string",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "supplierPONumber": {
            "type": "string",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryNoteNumber": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "paidAmount": {
            "type": "number",
            "format": "double"
          },
          "outstandingAmount": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "$ref": "#/components/schemas/FactureStatus"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "verificationStatus": {
            "type": "string",
            "nullable": true
          },
          "paymentPriority": {
            "$ref": "#/components/schemas/PaymentPriority"
          },
          "priorityDisplay": {
            "type": "string",
            "nullable": true
          },
          "receivedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "receivedByName": {
            "type": "string",
            "nullable": true
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "verifiedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "verifiedByName": {
            "type": "string",
            "nullable": true
          },
          "verifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "approvedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvedByName": {
            "type": "string",
            "nullable": true
          },
          "approvedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "supplierInvoiceFile": {
            "type": "string",
            "nullable": true
          },
          "receiptFile": {
            "type": "string",
            "nullable": true
          },
          "supportingDocs": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "disputeReason": {
            "type": "string",
            "nullable": true
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "createdByName": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "updatedByName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "daysOverdue": {
            "type": "integer",
            "format": "int32"
          },
          "daysUntilDue": {
            "type": "integer",
            "format": "int32"
          },
          "paymentProgress": {
            "type": "number",
            "format": "double"
          },
          "isOverdue": {
            "type": "boolean"
          },
          "requiresApproval": {
            "type": "boolean"
          },
          "totalAmountDisplay": {
            "type": "string",
            "nullable": true
          },
          "paidAmountDisplay": {
            "type": "string",
            "nullable": true
          },
          "outstandingAmountDisplay": {
            "type": "string",
            "nullable": true
          },
          "canVerify": {
            "type": "boolean"
          },
          "canApprove": {
            "type": "boolean"
          },
          "canDispute": {
            "type": "boolean"
          },
          "canCancel": {
            "type": "boolean"
          },
          "canSchedulePayment": {
            "type": "boolean"
          },
          "canReceivePayment": {
            "type": "boolean"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FactureItemDto"
            },
            "nullable": true
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacturePaymentDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FactureItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "factureId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productBarcode": {
            "type": "string",
            "nullable": true
          },
          "supplierItemCode": {
            "type": "string",
            "nullable": true
          },
          "supplierItemDescription": {
            "type": "string",
            "nullable": true
          },
          "itemDescription": {
            "type": "string",
            "nullable": true
          },
          "itemCode": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "receivedQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "acceptedQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "lineTotal": {
            "type": "number",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "format": "double"
          },
          "lineTotalWithTax": {
            "type": "number",
            "format": "double"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "verificationNotes": {
            "type": "string",
            "nullable": true
          },
          "isVerified": {
            "type": "boolean"
          },
          "verifiedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "verifiedByName": {
            "type": "string",
            "nullable": true
          },
          "isProductMapped": {
            "type": "boolean"
          },
          "hasQuantityVariance": {
            "type": "boolean"
          },
          "hasAcceptanceVariance": {
            "type": "boolean"
          },
          "verificationStatus": {
            "type": "string",
            "nullable": true
          },
          "quantityVariance": {
            "type": "number",
            "format": "double"
          },
          "acceptanceVariance": {
            "type": "number",
            "format": "double"
          },
          "unitDisplay": {
            "type": "string",
            "nullable": true
          },
          "unitPriceDisplay": {
            "type": "string",
            "nullable": true
          },
          "lineTotalDisplay": {
            "type": "string",
            "nullable": true
          },
          "lineTotalWithTaxDisplay": {
            "type": "string",
            "nullable": true
          },
          "requiresApproval": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FactureListDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "supplierInvoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "internalReferenceNumber": {
            "type": "string",
            "nullable": true
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "paidAmount": {
            "type": "number",
            "format": "double"
          },
          "outstandingAmount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "$ref": "#/components/schemas/FactureStatus"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "paymentPriority": {
            "$ref": "#/components/schemas/PaymentPriority"
          },
          "priorityDisplay": {
            "type": "string",
            "nullable": true
          },
          "daysOverdue": {
            "type": "integer",
            "format": "int32"
          },
          "daysUntilDue": {
            "type": "integer",
            "format": "int32"
          },
          "isOverdue": {
            "type": "boolean"
          },
          "totalAmountDisplay": {
            "type": "string",
            "nullable": true
          },
          "outstandingAmountDisplay": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FacturePaymentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "factureId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentMethodDisplay": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PaymentStatus"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "ourPaymentReference": {
            "type": "string",
            "nullable": true
          },
          "supplierAckReference": {
            "type": "string",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "nullable": true
          },
          "checkNumber": {
            "type": "string",
            "nullable": true
          },
          "transferReference": {
            "type": "string",
            "nullable": true
          },
          "paymentReference": {
            "type": "string",
            "nullable": true
          },
          "processedBy": {
            "type": "integer",
            "format": "int32"
          },
          "processedByName": {
            "type": "string",
            "nullable": true
          },
          "approvedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvedByName": {
            "type": "string",
            "nullable": true
          },
          "approvedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "confirmedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "confirmedByName": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "failureReason": {
            "type": "string",
            "nullable": true
          },
          "disputeReason": {
            "type": "string",
            "nullable": true
          },
          "paymentReceiptFile": {
            "type": "string",
            "nullable": true
          },
          "confirmationFile": {
            "type": "string",
            "nullable": true
          },
          "scheduledDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "requiresApproval": {
            "type": "boolean"
          },
          "isOverdue": {
            "type": "boolean"
          },
          "daysOverdue": {
            "type": "integer",
            "format": "int32"
          },
          "daysUntilPayment": {
            "type": "integer",
            "format": "int32"
          },
          "isDueToday": {
            "type": "boolean"
          },
          "isDueSoon": {
            "type": "boolean"
          },
          "processingStatus": {
            "type": "string",
            "nullable": true
          },
          "hasConfirmation": {
            "type": "boolean"
          },
          "amountDisplay": {
            "type": "string",
            "nullable": true
          },
          "canEdit": {
            "type": "boolean"
          },
          "canProcess": {
            "type": "boolean"
          },
          "canConfirm": {
            "type": "boolean"
          },
          "canCancel": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FactureStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "FactureSummaryDto": {
        "type": "object",
        "properties": {
          "totalFactures": {
            "type": "integer",
            "format": "int32"
          },
          "pendingVerification": {
            "type": "integer",
            "format": "int32"
          },
          "pendingApproval": {
            "type": "integer",
            "format": "int32"
          },
          "overduePayments": {
            "type": "integer",
            "format": "int32"
          },
          "paymentsDueToday": {
            "type": "integer",
            "format": "int32"
          },
          "paymentsDueSoon": {
            "type": "integer",
            "format": "int32"
          },
          "totalOutstanding": {
            "type": "number",
            "format": "double"
          },
          "totalOverdue": {
            "type": "number",
            "format": "double"
          },
          "paymentsDueThisWeek": {
            "type": "number",
            "format": "double"
          },
          "paymentsDueThisMonth": {
            "type": "number",
            "format": "double"
          },
          "totalOutstandingDisplay": {
            "type": "string",
            "nullable": true
          },
          "totalOverdueDisplay": {
            "type": "string",
            "nullable": true
          },
          "paymentsDueThisWeekDisplay": {
            "type": "string",
            "nullable": true
          },
          "paymentsDueThisMonthDisplay": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FactureSupplierAlertDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "alertType": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "factureId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "factureReference": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "daysOverdue": {
            "type": "integer",
            "format": "int32"
          },
          "actionRequired": {
            "type": "string",
            "nullable": true
          },
          "isRead": {
            "type": "boolean"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FifoBatchScoreDto": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "daysUntilExpiry": {
            "type": "integer",
            "format": "int32"
          },
          "currentStock": {
            "type": "integer",
            "format": "int32"
          },
          "valueAtRisk": {
            "type": "number",
            "format": "double"
          },
          "fifoScore": {
            "type": "integer",
            "format": "int32"
          },
          "urgencyScore": {
            "type": "integer",
            "format": "int32"
          },
          "velocityScore": {
            "type": "integer",
            "format": "int32"
          },
          "financialImpactScore": {
            "type": "integer",
            "format": "int32"
          },
          "overallScore": {
            "type": "integer",
            "format": "int32"
          },
          "recommendedSaleOrder": {
            "type": "integer",
            "format": "int32"
          },
          "actionPriority": {
            "type": "string",
            "nullable": true
          },
          "reasonCode": {
            "type": "string",
            "nullable": true
          },
          "actionItems": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FifoRecommendationDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productBarcode": {
            "type": "string",
            "nullable": true
          },
          "batchRecommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchRecommendationDto"
            },
            "nullable": true
          },
          "totalAvailableStock": {
            "type": "integer",
            "format": "int32"
          },
          "averageCostPerUnit": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "FifoRecommendationDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FifoRecommendationDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinancialReportDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "grossProfit": {
            "type": "number",
            "format": "double"
          },
          "grossProfitMargin": {
            "type": "number",
            "format": "double"
          },
          "totalTax": {
            "type": "number",
            "format": "double"
          },
          "netProfit": {
            "type": "number",
            "format": "double"
          },
          "monthlyBreakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthlyProfitDto"
            },
            "nullable": true
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FinancialReportDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/FinancialReportDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateBatchNumberRequest": {
        "required": [
          "productId"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateBatchNumberResponseDto": {
        "type": "object",
        "properties": {
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "example": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateBatchNumberResponseDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/GenerateBatchNumberResponseDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GrantCreditDto": {
        "required": [
          "amount",
          "description",
          "saleId"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "maximum": 100000000,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "saleId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "paymentTermDays": {
            "maximum": 365,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HighRiskBatchDto": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time"
          },
          "daysUntilExpiry": {
            "type": "integer",
            "format": "int32"
          },
          "currentStock": {
            "type": "integer",
            "format": "int32"
          },
          "valueAtRisk": {
            "type": "number",
            "format": "double"
          },
          "riskLevel": {
            "type": "string",
            "nullable": true
          },
          "recommendedAction": {
            "type": "string",
            "nullable": true
          },
          "discountSuggestion": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Int32ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "integer",
            "format": "int32"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InterBranchTransferRecommendationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "recommendationType": {
            "type": "string",
            "nullable": true
          },
          "sourceBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "sourceBranchName": {
            "type": "string",
            "nullable": true
          },
          "targetBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "targetBranchName": {
            "type": "string",
            "nullable": true
          },
          "fromBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "fromBranchName": {
            "type": "string",
            "nullable": true
          },
          "toBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "toBranchName": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "recommendedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "estimatedBenefit": {
            "type": "number",
            "format": "double"
          },
          "transferCost": {
            "type": "number",
            "format": "double"
          },
          "netBenefit": {
            "type": "number",
            "format": "double"
          },
          "potentialSavings": {
            "type": "number",
            "format": "double"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "recommendedTransferDate": {
            "type": "string",
            "format": "date-time"
          },
          "urgencyScore": {
            "type": "integer",
            "format": "int32"
          },
          "riskLevel": {
            "type": "number",
            "format": "double"
          },
          "riskFactors": {
            "type": "string",
            "nullable": true
          },
          "successLikelihood": {
            "type": "number",
            "format": "double"
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "transferReasons": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "logistics": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InterBranchTransferRecommendationDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InterBranchTransferRecommendationDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryDistributionPlanDto": {
        "type": "object",
        "properties": {
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "optimizationScope": {
            "type": "string",
            "nullable": true
          },
          "recommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionRecommendationDto"
            },
            "nullable": true
          },
          "totalOptimizationValue": {
            "type": "number",
            "format": "double"
          },
          "implementationCost": {
            "type": "number",
            "format": "double"
          },
          "netBenefit": {
            "type": "number",
            "format": "double"
          },
          "currentMetrics": {
            "$ref": "#/components/schemas/DistributionMetricsDto"
          },
          "projectedMetrics": {
            "$ref": "#/components/schemas/DistributionMetricsDto"
          },
          "riskFactors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "successFactors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryDistributionPlanDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/InventoryDistributionPlanDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryMutation": {
        "required": [
          "notes",
          "productId",
          "quantity",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "type": {
            "$ref": "#/components/schemas/MutationType"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "stockBefore": {
            "type": "integer",
            "format": "int32"
          },
          "stockAfter": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "referenceNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "saleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sale": {
            "$ref": "#/components/schemas/Sale"
          },
          "unitCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "typeDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isStockIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isStockOut": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InventoryMutationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "stockBefore": {
            "type": "integer",
            "format": "int32"
          },
          "stockAfter": {
            "type": "integer",
            "format": "int32"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "unitCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryMutationDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryMutationDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryReportDto": {
        "type": "object",
        "properties": {
          "totalProducts": {
            "type": "integer",
            "format": "int32"
          },
          "totalInventoryValue": {
            "type": "number",
            "format": "double"
          },
          "lowStockProducts": {
            "type": "integer",
            "format": "int32"
          },
          "outOfStockProducts": {
            "type": "integer",
            "format": "int32"
          },
          "categoryBreakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryInventoryDto"
            },
            "nullable": true
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "InventoryReportDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/InventoryReportDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryTransfer": {
        "required": [
          "destinationBranchId",
          "priority",
          "requestReason",
          "sourceBranchId",
          "status",
          "transferNumber",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "transferNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TransferStatus"
          },
          "type": {
            "$ref": "#/components/schemas/TransferType"
          },
          "priority": {
            "$ref": "#/components/schemas/TransferPriority"
          },
          "sourceBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "sourceBranch": {
            "$ref": "#/components/schemas/Branch"
          },
          "destinationBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "destinationBranch": {
            "$ref": "#/components/schemas/Branch"
          },
          "requestReason": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "notes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "estimatedCost": {
            "type": "number",
            "format": "double"
          },
          "actualCost": {
            "type": "number",
            "format": "double"
          },
          "transferItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTransferItem"
            },
            "nullable": true
          },
          "requestedBy": {
            "type": "integer",
            "format": "int32"
          },
          "requestedByUser": {
            "$ref": "#/components/schemas/User"
          },
          "approvedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "approvedByUser": {
            "$ref": "#/components/schemas/User"
          },
          "approvedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shippedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shippedByUser": {
            "$ref": "#/components/schemas/User"
          },
          "shippedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receivedBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "receivedByUser": {
            "$ref": "#/components/schemas/User"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledBy": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cancelledByUser": {
            "$ref": "#/components/schemas/User"
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancellationReason": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "logisticsProvider": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "trackingNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "estimatedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "distanceKm": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalValue": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "requiresManagerApproval": {
            "type": "boolean",
            "readOnly": true
          },
          "isEmergencyTransfer": {
            "type": "boolean",
            "readOnly": true
          },
          "fromBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "toBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "transferDate": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "canBeApproved": {
            "type": "boolean",
            "readOnly": true
          },
          "canBeShipped": {
            "type": "boolean",
            "readOnly": true
          },
          "canBeReceived": {
            "type": "boolean",
            "readOnly": true
          },
          "canBeCancelled": {
            "type": "boolean",
            "readOnly": true
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "typeDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "priorityDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "processingTime": {
            "type": "string",
            "format": "date-span",
            "nullable": true,
            "readOnly": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InventoryTransferDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "transferNumber": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/TransferStatus"
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TransferType"
          },
          "typeDisplay": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/TransferPriority"
          },
          "priorityDisplay": {
            "type": "string",
            "nullable": true
          },
          "sourceBranch": {
            "$ref": "#/components/schemas/BranchSummaryDto"
          },
          "destinationBranch": {
            "$ref": "#/components/schemas/BranchSummaryDto"
          },
          "requestReason": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "estimatedCost": {
            "type": "number",
            "format": "double"
          },
          "actualCost": {
            "type": "number",
            "format": "double"
          },
          "distanceKm": {
            "type": "number",
            "format": "double"
          },
          "transferItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTransferItemDto"
            },
            "nullable": true
          },
          "requestedBy": {
            "$ref": "#/components/schemas/UserSummaryDto"
          },
          "approvedBy": {
            "$ref": "#/components/schemas/UserSummaryDto"
          },
          "approvedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "shippedBy": {
            "$ref": "#/components/schemas/UserSummaryDto"
          },
          "shippedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receivedBy": {
            "$ref": "#/components/schemas/UserSummaryDto"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledBy": {
            "$ref": "#/components/schemas/UserSummaryDto"
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancellationReason": {
            "type": "string",
            "nullable": true
          },
          "logisticsProvider": {
            "type": "string",
            "nullable": true
          },
          "trackingNumber": {
            "type": "string",
            "nullable": true
          },
          "estimatedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalValue": {
            "type": "number",
            "format": "double"
          },
          "requiresManagerApproval": {
            "type": "boolean"
          },
          "isEmergencyTransfer": {
            "type": "boolean"
          },
          "processingTime": {
            "type": "string",
            "format": "date-span",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "InventoryTransferDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/InventoryTransferDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryTransferItem": {
        "required": [
          "inventoryTransferId",
          "productId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "inventoryTransferId": {
            "type": "integer",
            "format": "int32"
          },
          "inventoryTransfer": {
            "$ref": "#/components/schemas/InventoryTransfer"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitCost": {
            "type": "number",
            "format": "double"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "sourceStockBefore": {
            "type": "integer",
            "format": "int32"
          },
          "sourceStockAfter": {
            "type": "integer",
            "format": "int32"
          },
          "destinationStockBefore": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "destinationStockAfter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "qualityNotes": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isExpired": {
            "type": "boolean",
            "readOnly": true
          },
          "isNearExpiry": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "InventoryTransferItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/ProductSummaryDto"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitCost": {
            "type": "number",
            "format": "double"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "sourceStockBefore": {
            "type": "integer",
            "format": "int32"
          },
          "sourceStockAfter": {
            "type": "integer",
            "format": "int32"
          },
          "destinationStockBefore": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "destinationStockAfter": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "qualityNotes": {
            "type": "string",
            "nullable": true
          },
          "isExpired": {
            "type": "boolean"
          },
          "isNearExpiry": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "InventoryTransferStatusHistory": {
        "required": [
          "fromStatus",
          "inventoryTransferId",
          "toStatus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "inventoryTransferId": {
            "type": "integer",
            "format": "int32"
          },
          "inventoryTransfer": {
            "$ref": "#/components/schemas/InventoryTransfer"
          },
          "fromStatus": {
            "$ref": "#/components/schemas/TransferStatus"
          },
          "toStatus": {
            "$ref": "#/components/schemas/TransferStatus"
          },
          "changedBy": {
            "type": "integer",
            "format": "int32"
          },
          "changedByUser": {
            "$ref": "#/components/schemas/User"
          },
          "changedAt": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InventoryTransferStatusHistoryListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryTransferStatusHistory"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Member": {
        "required": [
          "memberNumber",
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "address": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "memberNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "tier": {
            "$ref": "#/components/schemas/MembershipTier"
          },
          "joinDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "totalPoints": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "usedPoints": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "totalSpent": {
            "type": "number",
            "format": "double"
          },
          "totalTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "lastTransactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creditLimit": {
            "maximum": 100000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "currentDebt": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "paymentTerms": {
            "maximum": 90,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "creditStatus": {
            "$ref": "#/components/schemas/CreditStatus"
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "nextPaymentDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentDelays": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "lifetimeDebt": {
            "type": "number",
            "format": "double"
          },
          "creditScore": {
            "maximum": 850,
            "minimum": 300,
            "type": "integer",
            "format": "int32"
          },
          "sales": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sale"
            },
            "nullable": true
          },
          "memberPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberPoint"
            },
            "nullable": true
          },
          "creditTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberCreditTransaction"
            },
            "nullable": true
          },
          "paymentReminders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberPaymentReminder"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "availablePoints": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "averageTransactionValue": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "availableCredit": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "creditUtilization": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "paymentSuccessRate": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "daysOverdue": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberCreditEligibilityDto": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "memberName": {
            "type": "string",
            "nullable": true
          },
          "memberNumber": {
            "type": "string",
            "nullable": true
          },
          "isEligibleForCredit": {
            "type": "boolean"
          },
          "eligibilityReason": {
            "type": "string",
            "nullable": true
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "currentDebt": {
            "type": "number",
            "format": "double"
          },
          "availableCredit": {
            "type": "number",
            "format": "double"
          },
          "creditStatus": {
            "type": "string",
            "nullable": true
          },
          "creditScore": {
            "type": "integer",
            "format": "int32"
          },
          "maxTransactionAmount": {
            "type": "number",
            "format": "double"
          },
          "requiresManagerApproval": {
            "type": "boolean"
          },
          "creditUtilization": {
            "type": "number",
            "format": "double"
          },
          "hasOverduePayments": {
            "type": "boolean"
          },
          "restrictions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "creditLimitDisplay": {
            "type": "string",
            "nullable": true
          },
          "availableCreditDisplay": {
            "type": "string",
            "nullable": true
          },
          "statusColor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberCreditEligibilityDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/MemberCreditEligibilityDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberCreditStatusDto": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "currentDebt": {
            "type": "number",
            "format": "double"
          },
          "availableCredit": {
            "type": "number",
            "format": "double"
          },
          "creditStatus": {
            "type": "string",
            "nullable": true
          },
          "creditScore": {
            "type": "integer",
            "format": "int32"
          },
          "isEligibleForCredit": {
            "type": "boolean"
          },
          "hasOverduePayments": {
            "type": "boolean"
          },
          "nextPaymentDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creditUtilization": {
            "type": "number",
            "format": "double"
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          },
          "statusColor": {
            "type": "string",
            "nullable": true
          },
          "canUseCredit": {
            "type": "boolean"
          },
          "maxAllowedTransaction": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "MemberCreditStatusDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/MemberCreditStatusDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberCreditTransaction": {
        "required": [
          "amount",
          "createdBy",
          "description",
          "memberId",
          "status",
          "transactionDate",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/CreditTransactionType"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "referenceNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/CreditTransactionStatus"
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "member": {
            "$ref": "#/components/schemas/Member"
          },
          "createdByUser": {
            "$ref": "#/components/schemas/User"
          },
          "branch": {
            "$ref": "#/components/schemas/Branch"
          },
          "increasesDebt": {
            "type": "boolean",
            "readOnly": true
          },
          "reducesDebt": {
            "type": "boolean",
            "readOnly": true
          },
          "daysUntilDue": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "isOverdue": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "memberNumber": {
            "type": "string",
            "nullable": true
          },
          "tier": {
            "type": "string",
            "nullable": true
          },
          "joinDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "totalPoints": {
            "type": "integer",
            "format": "int32"
          },
          "usedPoints": {
            "type": "integer",
            "format": "int32"
          },
          "availablePoints": {
            "type": "integer",
            "format": "int32"
          },
          "totalSpent": {
            "type": "number",
            "format": "double"
          },
          "totalTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "lastTransactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "averageTransactionValue": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MemberDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/MemberDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberLoyaltyDto": {
        "type": "object",
        "properties": {
          "loyaltyTier": {
            "type": "string",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "averageSpend": {
            "type": "number",
            "format": "double"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "MemberPaymentReminder": {
        "required": [
          "createdBy",
          "daysOverdue",
          "dueAmount",
          "memberId",
          "message",
          "priority",
          "reminderDate",
          "reminderType",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "reminderType": {
            "$ref": "#/components/schemas/ReminderType"
          },
          "reminderDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueAmount": {
            "type": "number",
            "format": "double"
          },
          "daysOverdue": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/ReminderStatus"
          },
          "responseDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "responseAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "nextReminderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contactMethod": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/ReminderPriority"
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "member": {
            "$ref": "#/components/schemas/Member"
          },
          "createdByUser": {
            "$ref": "#/components/schemas/User"
          },
          "branch": {
            "$ref": "#/components/schemas/Branch"
          },
          "hasResponse": {
            "type": "boolean",
            "readOnly": true
          },
          "daysSinceReminder": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isNextReminderDue": {
            "type": "boolean",
            "readOnly": true
          },
          "wasEffective": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberPoint": {
        "required": [
          "description",
          "memberId",
          "points"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "member": {
            "$ref": "#/components/schemas/Member"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/PointTransactionType"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "saleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sale": {
            "$ref": "#/components/schemas/Sale"
          },
          "referenceNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "transactionAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pointRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isExpired": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "isEarning": {
            "type": "boolean",
            "readOnly": true
          },
          "isRedemption": {
            "type": "boolean",
            "readOnly": true
          },
          "typeDisplay": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberPointDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isEarning": {
            "type": "boolean"
          },
          "isRedemption": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MemberPointDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberPointDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberSearchResponse": {
        "type": "object",
        "properties": {
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberDto"
            },
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MemberSearchResponseApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/MemberSearchResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberStatsDto": {
        "type": "object",
        "properties": {
          "totalTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "totalSpent": {
            "type": "number",
            "format": "double"
          },
          "averageTransactionValue": {
            "type": "number",
            "format": "double"
          },
          "totalPoints": {
            "type": "integer",
            "format": "int32"
          },
          "availablePoints": {
            "type": "integer",
            "format": "int32"
          },
          "lastTransactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currentTier": {
            "type": "string",
            "nullable": true
          },
          "nextTierRequirement": {
            "type": "number",
            "format": "double"
          },
          "memberSince": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MemberStatsDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/MemberStatsDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberWithCreditDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "memberNumber": {
            "type": "string",
            "nullable": true
          },
          "tier": {
            "type": "string",
            "nullable": true
          },
          "joinDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "totalPoints": {
            "type": "integer",
            "format": "int32"
          },
          "usedPoints": {
            "type": "integer",
            "format": "int32"
          },
          "availablePoints": {
            "type": "integer",
            "format": "int32"
          },
          "totalSpent": {
            "type": "number",
            "format": "double"
          },
          "totalTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "lastTransactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "averageTransactionValue": {
            "type": "number",
            "format": "double"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "currentDebt": {
            "type": "number",
            "format": "double"
          },
          "availableCredit": {
            "type": "number",
            "format": "double"
          },
          "creditStatus": {
            "type": "string",
            "nullable": true
          },
          "creditScore": {
            "type": "integer",
            "format": "int32"
          },
          "nextPaymentDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isEligibleForCredit": {
            "type": "boolean"
          },
          "creditUtilization": {
            "type": "number",
            "format": "double"
          },
          "paymentDelays": {
            "type": "integer",
            "format": "int32"
          },
          "lifetimeDebt": {
            "type": "number",
            "format": "double"
          },
          "paymentTerms": {
            "type": "integer",
            "format": "int32"
          },
          "lastCreditUsed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creditLimitDisplay": {
            "type": "string",
            "nullable": true
          },
          "currentDebtDisplay": {
            "type": "string",
            "nullable": true
          },
          "availableCreditDisplay": {
            "type": "string",
            "nullable": true
          },
          "creditUtilizationDisplay": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberWithCreditDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/MemberWithCreditDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberWithCreditDtoPagedResult": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberWithCreditDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "hasPreviousPage": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "MemberWithCreditDtoPagedResultApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/MemberWithCreditDtoPagedResult"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MembershipTier": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "MonthlyProfitDto": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "monthName": {
            "type": "string",
            "nullable": true
          },
          "revenue": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "profit": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "MonthlyRevenueNotificationRequest": {
        "type": "object",
        "properties": {
          "revenue": {
            "type": "number",
            "format": "double"
          },
          "month": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MutationType": {
        "enum": [
          "StockIn",
          "StockOut",
          "Sale",
          "Purchase",
          "Return",
          "Adjustment",
          "Transfer",
          "Damaged",
          "Expired"
        ],
        "type": "string"
      },
      "NotificationActionDto": {
        "required": [
          "action",
          "title"
        ],
        "type": "object",
        "properties": {
          "action": {
            "minLength": 1,
            "type": "string"
          },
          "title": {
            "minLength": 1,
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationCategory": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "NotificationChannel": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "NotificationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          },
          "isRead": {
            "type": "boolean"
          },
          "readAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actionUrl": {
            "type": "string",
            "nullable": true
          },
          "actionText": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "timeAgo": {
            "type": "string",
            "nullable": true
          },
          "isExpired": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NotificationDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/NotificationDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationHealthDto": {
        "type": "object",
        "properties": {
          "totalActiveNotifications": {
            "type": "integer",
            "format": "int32"
          },
          "criticalNotifications": {
            "type": "integer",
            "format": "int32"
          },
          "highNotifications": {
            "type": "integer",
            "format": "int32"
          },
          "mediumNotifications": {
            "type": "integer",
            "format": "int32"
          },
          "lowNotifications": {
            "type": "integer",
            "format": "int32"
          },
          "totalValueAtRisk": {
            "type": "number",
            "format": "double"
          },
          "overdueNotifications": {
            "type": "integer",
            "format": "int32"
          },
          "checkTimestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "NotificationHealthDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/NotificationHealthDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationPayload": {
        "required": [
          "body",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "body": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "badge": {
            "type": "string",
            "nullable": true
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "requireInteraction": {
            "type": "boolean"
          },
          "silent": {
            "type": "boolean"
          },
          "vibrate": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationActionDto"
            },
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/NotificationPriority"
          }
        },
        "additionalProperties": false
      },
      "NotificationPreferencesDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "emailNotifications": {
            "type": "boolean"
          },
          "pushNotifications": {
            "type": "boolean"
          },
          "smsNotifications": {
            "type": "boolean"
          },
          "expiryAlerts": {
            "type": "boolean"
          },
          "stockAlerts": {
            "type": "boolean"
          },
          "financialAlerts": {
            "type": "boolean"
          },
          "alertFrequency": {
            "type": "string",
            "nullable": true
          },
          "quietHours": {
            "$ref": "#/components/schemas/QuietHours"
          }
        },
        "additionalProperties": false
      },
      "NotificationPreferencesDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/NotificationPreferencesDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationPriority": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "NotificationSettingsDto": {
        "type": "object",
        "properties": {
          "emailEnabled": {
            "type": "boolean"
          },
          "emailLowStock": {
            "type": "boolean"
          },
          "emailMonthlyReport": {
            "type": "boolean"
          },
          "emailSystemUpdates": {
            "type": "boolean"
          },
          "inAppEnabled": {
            "type": "boolean"
          },
          "inAppLowStock": {
            "type": "boolean"
          },
          "inAppSales": {
            "type": "boolean"
          },
          "inAppSystem": {
            "type": "boolean"
          },
          "lowStockThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "quietHoursStart": {
            "type": "string",
            "format": "date-span"
          },
          "quietHoursEnd": {
            "type": "string",
            "format": "date-span"
          },
          "emailExpiry": {
            "type": "boolean"
          },
          "inAppExpiry": {
            "type": "boolean"
          },
          "expiryWarning7Days": {
            "type": "boolean"
          },
          "expiryUrgent3Days": {
            "type": "boolean"
          },
          "expiryExpiredAlert": {
            "type": "boolean"
          },
          "expiryDailySummary": {
            "type": "boolean"
          },
          "fifoRecommendations": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "NotificationSettingsDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/NotificationSettingsDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationSummaryDto": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "unreadCount": {
            "type": "integer",
            "format": "int32"
          },
          "recentNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NotificationSummaryDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/NotificationSummaryDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OfflineSyncItem": {
        "required": [
          "action",
          "data",
          "entityType"
        ],
        "type": "object",
        "properties": {
          "entityType": {
            "minLength": 1,
            "type": "string"
          },
          "action": {
            "minLength": 1,
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": { }
          },
          "clientId": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OfflineSyncRequest": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OfflineSyncItem"
            },
            "nullable": true
          },
          "clientVersion": {
            "type": "string",
            "nullable": true
          },
          "lastSyncTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "OptimizationExecutionResultDto": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "wasDryRun": {
            "type": "boolean"
          },
          "executedAt": {
            "type": "string",
            "format": "date-time"
          },
          "executedByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "executedActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutedActionDto"
            },
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "totalValue": {
            "type": "number",
            "format": "double"
          },
          "estimatedSavings": {
            "type": "number",
            "format": "double"
          },
          "actionsExecuted": {
            "type": "integer",
            "format": "int32"
          },
          "actionsFailed": {
            "type": "integer",
            "format": "int32"
          },
          "executionSummary": {
            "type": "string",
            "nullable": true
          },
          "nextSteps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OptimizationExecutionResultDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/OptimizationExecutionResultDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OptimizationSuggestionDto": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "recommendation": {
            "type": "string",
            "nullable": true
          },
          "potentialSavings": {
            "type": "number",
            "format": "double"
          },
          "impact": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OutstandingBySupplierDto": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierCode": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "contactPerson": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "totalOutstandingFactures": {
            "type": "integer",
            "format": "int32"
          },
          "totalOutstandingAmount": {
            "type": "number",
            "format": "double"
          },
          "oldestOutstandingDays": {
            "type": "number",
            "format": "double"
          },
          "averagePaymentDelayDays": {
            "type": "number",
            "format": "double"
          },
          "oldestFactureDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "overdueCount": {
            "type": "integer",
            "format": "int32"
          },
          "overdueAmount": {
            "type": "number",
            "format": "double"
          },
          "paymentRisk": {
            "type": "string",
            "nullable": true
          },
          "topOutstandingFactures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutstandingFactureBriefDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OutstandingFactureBriefDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "supplierInvoiceNumber": {
            "type": "string",
            "nullable": true
          },
          "internalReferenceNumber": {
            "type": "string",
            "nullable": true
          },
          "outstandingAmount": {
            "type": "number",
            "format": "double"
          },
          "daysOverdue": {
            "type": "integer",
            "format": "int32"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "priority": {
            "$ref": "#/components/schemas/PaymentPriority"
          }
        },
        "additionalProperties": false
      },
      "POSMemberCreditDto": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "memberNumber": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "tier": {
            "type": "string",
            "nullable": true
          },
          "totalPoints": {
            "type": "integer",
            "format": "int32"
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "currentDebt": {
            "type": "number",
            "format": "double"
          },
          "availableCredit": {
            "type": "number",
            "format": "double"
          },
          "creditStatus": {
            "type": "string",
            "nullable": true
          },
          "creditScore": {
            "type": "integer",
            "format": "int32"
          },
          "canUseCredit": {
            "type": "boolean"
          },
          "isEligibleForCredit": {
            "type": "boolean"
          },
          "maxTransactionAmount": {
            "type": "number",
            "format": "double"
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          },
          "statusColor": {
            "type": "string",
            "nullable": true
          },
          "hasWarnings": {
            "type": "boolean"
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "hasOverduePayments": {
            "type": "boolean"
          },
          "nextPaymentDueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "daysUntilNextPayment": {
            "type": "integer",
            "format": "int32"
          },
          "creditLimitDisplay": {
            "type": "string",
            "nullable": true
          },
          "availableCreditDisplay": {
            "type": "string",
            "nullable": true
          },
          "currentDebtDisplay": {
            "type": "string",
            "nullable": true
          },
          "creditUtilization": {
            "type": "number",
            "format": "double"
          },
          "lastCreditUsed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalCreditTransactions": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "POSMemberCreditDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/POSMemberCreditDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethod": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "PaymentMethodBreakdownDto": {
        "type": "object",
        "properties": {
          "methodName": {
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "transactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodSummaryDto": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "transactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodSummaryDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodSummaryDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentPriority": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "PaymentResultDto": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "paymentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creditTransactionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "processedAmount": {
            "type": "number",
            "format": "double"
          },
          "remainingBalance": {
            "type": "number",
            "format": "double"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          },
          "transactionReference": {
            "type": "string",
            "nullable": true
          },
          "newAvailableCredit": {
            "type": "number",
            "format": "double"
          },
          "newCurrentDebt": {
            "type": "number",
            "format": "double"
          },
          "newCreditStatus": {
            "type": "string",
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "notifications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "requiresFollowUp": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PaymentResultDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/PaymentResultDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "PointTransactionType": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProcessFifoSaleDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessPaymentDto": {
        "required": [
          "paymentId"
        ],
        "type": "object",
        "properties": {
          "paymentId": {
            "type": "integer",
            "format": "int32"
          },
          "transferReference": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "checkNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "processingNotes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "paymentReceiptFile": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Product": {
        "required": [
          "barcode",
          "buyPrice",
          "categoryId",
          "name",
          "sellPrice",
          "stock"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "barcode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "buyPrice": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "sellPrice": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "stock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "minimumStock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "saleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItem"
            },
            "nullable": true
          },
          "inventoryMutations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryMutation"
            },
            "nullable": true
          },
          "productBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBatch"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "profitMargin": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "isLowStock": {
            "type": "boolean",
            "readOnly": true
          },
          "isOutOfStock": {
            "type": "boolean",
            "readOnly": true
          },
          "requiresExpiryTracking": {
            "type": "boolean",
            "readOnly": true
          },
          "hasExpiredBatches": {
            "type": "boolean",
            "readOnly": true
          },
          "hasExpiringBatches": {
            "type": "boolean",
            "readOnly": true
          },
          "availableStockExcludingExpired": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProductBatch": {
        "required": [
          "batchNumber",
          "productId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currentStock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "initialStock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "costPerUnit": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "supplierName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "purchaseOrderNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isBlocked": {
            "type": "boolean"
          },
          "blockReason": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isExpired": {
            "type": "boolean"
          },
          "isDisposed": {
            "type": "boolean"
          },
          "disposalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disposedByUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "disposalMethod": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "updatedByUserId": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "branch": {
            "$ref": "#/components/schemas/Branch"
          },
          "createdByUser": {
            "$ref": "#/components/schemas/User"
          },
          "updatedByUser": {
            "$ref": "#/components/schemas/User"
          },
          "disposedByUser": {
            "$ref": "#/components/schemas/User"
          },
          "daysUntilExpiry": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "expiryStatus": {
            "$ref": "#/components/schemas/ExpiryStatus"
          },
          "availableStock": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProductBatchDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currentStock": {
            "type": "integer",
            "format": "int32"
          },
          "initialStock": {
            "type": "integer",
            "format": "int32"
          },
          "costPerUnit": {
            "type": "number",
            "format": "double"
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "purchaseOrderNumber": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "isBlocked": {
            "type": "boolean"
          },
          "blockReason": {
            "type": "string",
            "nullable": true
          },
          "isExpired": {
            "type": "boolean"
          },
          "isDisposed": {
            "type": "boolean"
          },
          "disposalDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "disposalMethod": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdByUserName": {
            "type": "string",
            "nullable": true
          },
          "updatedByUserName": {
            "type": "string",
            "nullable": true
          },
          "daysUntilExpiry": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expiryStatus": {
            "$ref": "#/components/schemas/ExpiryStatus"
          },
          "availableStock": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ProductBatchDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/ProductBatchDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductBatchDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBatchDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDemandForecastDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "forecastPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DemandDataPointDto"
            },
            "nullable": true
          },
          "averageDailyDemand": {
            "type": "number",
            "format": "double"
          },
          "totalForecastedDemand": {
            "type": "number",
            "format": "double"
          },
          "seasonalityFactor": {
            "type": "number",
            "format": "double"
          },
          "trendFactor": {
            "type": "number",
            "format": "double"
          },
          "confidenceLevel": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ProductDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "buyPrice": {
            "type": "number",
            "format": "double"
          },
          "sellPrice": {
            "type": "number",
            "format": "double"
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          },
          "minimumStock": {
            "type": "integer",
            "format": "int32"
          },
          "minStock": {
            "type": "integer",
            "format": "int32"
          },
          "maxStock": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryColor": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "profitMargin": {
            "type": "number",
            "format": "double"
          },
          "isLowStock": {
            "type": "boolean"
          },
          "isOutOfStock": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/ProductDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductListResponse": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            },
            "nullable": true
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProductListResponseApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/ProductListResponse"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "sellPrice": {
            "type": "number",
            "format": "double"
          },
          "currentStock": {
            "type": "integer",
            "format": "int32"
          },
          "minimumStock": {
            "type": "integer",
            "format": "int32"
          },
          "isLowStock": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProductTransferStatsDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productCode": {
            "type": "string",
            "nullable": true
          },
          "totalTransferCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalQuantityTransferred": {
            "type": "integer",
            "format": "int32"
          },
          "totalTransferValue": {
            "type": "number",
            "format": "double"
          },
          "frequencyRank": {
            "type": "integer",
            "format": "int32"
          },
          "commonRoutes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductWithBatchSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "buyPrice": {
            "type": "number",
            "format": "double"
          },
          "sellPrice": {
            "type": "number",
            "format": "double"
          },
          "stock": {
            "type": "integer",
            "format": "int32"
          },
          "minimumStock": {
            "type": "integer",
            "format": "int32"
          },
          "minStock": {
            "type": "integer",
            "format": "int32"
          },
          "maxStock": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "categoryColor": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "profitMargin": {
            "type": "number",
            "format": "double"
          },
          "isLowStock": {
            "type": "boolean"
          },
          "isOutOfStock": {
            "type": "boolean"
          },
          "totalBatches": {
            "type": "integer",
            "format": "int32"
          },
          "nearestExpiryBatch": {
            "$ref": "#/components/schemas/ProductBatchDto"
          },
          "totalValueAllBatches": {
            "type": "number",
            "format": "double"
          },
          "fifoRecommendation": {
            "type": "string",
            "nullable": true
          },
          "batchStatusSummary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductWithBatchSummaryDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductWithBatchSummaryDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PushKeysDto": {
        "required": [
          "auth",
          "p256dh"
        ],
        "type": "object",
        "properties": {
          "p256dh": {
            "minLength": 1,
            "type": "string"
          },
          "auth": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PushSubscriptionDto": {
        "required": [
          "endpoint",
          "keys"
        ],
        "type": "object",
        "properties": {
          "endpoint": {
            "minLength": 1,
            "type": "string"
          },
          "keys": {
            "$ref": "#/components/schemas/PushKeysDto"
          },
          "userAgent": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuickStatsDto": {
        "type": "object",
        "properties": {
          "todayRevenue": {
            "type": "number",
            "format": "double"
          },
          "todayTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "revenueGrowthPercentage": {
            "type": "number",
            "format": "double"
          },
          "pendingOrders": {
            "type": "integer",
            "format": "int32"
          },
          "lowStockAlerts": {
            "type": "integer",
            "format": "int32"
          },
          "activeMembers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "QuickStatsDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/QuickStatsDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QuietHours": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReceiptDataDto": {
        "type": "object",
        "properties": {
          "sale": {
            "$ref": "#/components/schemas/SaleDto"
          },
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "storeAddress": {
            "type": "string",
            "nullable": true
          },
          "storePhone": {
            "type": "string",
            "nullable": true
          },
          "storeEmail": {
            "type": "string",
            "nullable": true
          },
          "footerMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReceiptDataDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/ReceiptDataDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReceiveFactureDto": {
        "required": [
          "invoiceDate",
          "supplierId",
          "supplierInvoiceNumber",
          "totalAmount"
        ],
        "type": "object",
        "properties": {
          "supplierInvoiceNumber": {
            "maxLength": 50,
            "minLength": 3,
            "type": "string"
          },
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "invoiceDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "supplierPONumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryNoteNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "totalAmount": {
            "maximum": 999999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "tax": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "discount": {
            "maximum": 999999999.99,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "supplierInvoiceFile": {
            "type": "string",
            "nullable": true
          },
          "supportingDocs": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateFactureItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecentTransactionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "saleNumber": {
            "type": "string",
            "nullable": true
          },
          "saleDate": {
            "type": "string",
            "format": "date-time"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "cashierName": {
            "type": "string",
            "nullable": true
          },
          "itemCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RecentTransactionDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecentTransactionDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecordDeliveryRequest": {
        "type": "object",
        "properties": {
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "deliveryNoteNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecordPaymentDto": {
        "required": [
          "amount",
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "maximum": 100000000,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "paymentMethod": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "referenceNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RedeemPointsRequest": {
        "type": "object",
        "properties": {
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefundSaleRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReminderPriority": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ReminderStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ReminderType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "ReportExportDto": {
        "type": "object",
        "properties": {
          "reportType": {
            "type": "string",
            "nullable": true
          },
          "format": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "filePath": {
            "type": "string",
            "nullable": true
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ReportExportDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/ReportExportDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestClarificationRequest": {
        "type": "object",
        "properties": {
          "clarificationReason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Sale": {
        "required": [
          "amountPaid",
          "cashierId",
          "changeAmount",
          "paymentMethod",
          "saleDate",
          "saleNumber",
          "subtotal",
          "total"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "saleNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "saleDate": {
            "type": "string",
            "format": "date-time"
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "amountPaid": {
            "type": "number",
            "format": "double"
          },
          "changeAmount": {
            "type": "number",
            "format": "double"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentReference": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "creditAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isCreditTransaction": {
            "type": "boolean"
          },
          "creditTransactionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creditTransaction": {
            "$ref": "#/components/schemas/MemberCreditTransaction"
          },
          "memberId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "member": {
            "$ref": "#/components/schemas/Member"
          },
          "customerName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "cashierId": {
            "type": "integer",
            "format": "int32"
          },
          "cashier": {
            "$ref": "#/components/schemas/User"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "status": {
            "$ref": "#/components/schemas/SaleStatus"
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "receiptPrinted": {
            "type": "boolean"
          },
          "receiptPrintedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cancellationReason": {
            "type": "string",
            "nullable": true
          },
          "refundedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "refundReason": {
            "type": "string",
            "nullable": true
          },
          "originalSaleId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "saleItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItem"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalProfit": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalCost": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "tax": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "grossProfit": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "netProfit": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "redeemedPoints": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SaleCreditInfoDto": {
        "type": "object",
        "properties": {
          "saleId": {
            "type": "integer",
            "format": "int32"
          },
          "saleNumber": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "memberName": {
            "type": "string",
            "nullable": true
          },
          "memberNumber": {
            "type": "string",
            "nullable": true
          },
          "creditAmount": {
            "type": "number",
            "format": "double"
          },
          "totalSaleAmount": {
            "type": "number",
            "format": "double"
          },
          "cashAmount": {
            "type": "number",
            "format": "double"
          },
          "creditTransactionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creditTransactionReference": {
            "type": "string",
            "nullable": true
          },
          "transactionDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentTerms": {
            "type": "integer",
            "format": "int32"
          },
          "newCurrentDebt": {
            "type": "number",
            "format": "double"
          },
          "newAvailableCredit": {
            "type": "number",
            "format": "double"
          },
          "newCreditStatus": {
            "type": "string",
            "nullable": true
          },
          "creditAmountDisplay": {
            "type": "string",
            "nullable": true
          },
          "newCurrentDebtDisplay": {
            "type": "string",
            "nullable": true
          },
          "newAvailableCreditDisplay": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleCreditInfoDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/SaleCreditInfoDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "saleNumber": {
            "type": "string",
            "nullable": true
          },
          "saleDate": {
            "type": "string",
            "format": "date-time"
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "taxAmount": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "amountPaid": {
            "type": "number",
            "format": "double"
          },
          "changeAmount": {
            "type": "number",
            "format": "double"
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "paymentReference": {
            "type": "string",
            "nullable": true
          },
          "memberId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "memberName": {
            "type": "string",
            "nullable": true
          },
          "memberNumber": {
            "type": "string",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "cashierId": {
            "type": "integer",
            "format": "int32"
          },
          "cashierName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "receiptPrinted": {
            "type": "boolean"
          },
          "receiptPrintedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemDto"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "totalProfit": {
            "type": "number",
            "format": "double"
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          },
          "redeemedPoints": {
            "type": "integer",
            "format": "int32"
          },
          "receiptFooterMessage": {
            "type": "string",
            "nullable": true
          },
          "receiptStoreName": {
            "type": "string",
            "nullable": true
          },
          "receiptStoreAddress": {
            "type": "string",
            "nullable": true
          },
          "receiptStorePhone": {
            "type": "string",
            "nullable": true
          },
          "receiptStoreEmail": {
            "type": "string",
            "nullable": true
          },
          "receiptStoreLogoUrl": {
            "type": "string",
            "nullable": true
          },
          "receiptStoreWebsite": {
            "type": "string",
            "nullable": true
          },
          "receiptStoreTitle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/SaleDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleItem": {
        "required": [
          "productBarcode",
          "productId",
          "productName",
          "quantity",
          "saleId",
          "subtotal",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "saleId": {
            "type": "integer",
            "format": "int32"
          },
          "sale": {
            "$ref": "#/components/schemas/Sale"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "productName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "productBarcode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "unitCost": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "unit": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "totalProfit": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "discountPercentage": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SaleItemBatchDto": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "quantityUsed": {
            "type": "integer",
            "format": "int32"
          },
          "costPerUnit": {
            "type": "number",
            "format": "double"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiryStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productBarcode": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "unitCost": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "totalProfit": {
            "type": "number",
            "format": "double"
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SaleItemWithBatchDto": {
        "type": "object",
        "properties": {
          "saleItemId": {
            "type": "integer",
            "format": "int32"
          },
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "batchesUsed": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemBatchDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleItemWithBatchDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemWithBatchDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleItemWithBatchesDto": {
        "required": [
          "productId",
          "quantity",
          "subtotal",
          "unitPrice"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "subtotal": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "batchAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchAllocationDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "SaleSummaryDto": {
        "type": "object",
        "properties": {
          "totalSales": {
            "type": "number",
            "format": "double"
          },
          "transactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "averageTransaction": {
            "type": "number",
            "format": "double"
          },
          "totalProfit": {
            "type": "number",
            "format": "double"
          },
          "totalDiscount": {
            "type": "number",
            "format": "double"
          },
          "totalTax": {
            "type": "number",
            "format": "double"
          },
          "totalItemsSold": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentMethodBreakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodBreakdownDto"
            },
            "nullable": true
          },
          "categoryPerformance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryPerformanceDto"
            },
            "nullable": true
          },
          "topSellingProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopSellingProductDto"
            },
            "nullable": true
          },
          "salesTrend": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SalesTrendDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleSummaryDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/SaleSummaryDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SaleWithBatchesResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "saleNumber": {
            "type": "string",
            "nullable": true
          },
          "saleDate": {
            "type": "string",
            "format": "date-time"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "receivedAmount": {
            "type": "number",
            "format": "double"
          },
          "change": {
            "type": "number",
            "format": "double"
          },
          "memberId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "memberName": {
            "type": "string",
            "nullable": true
          },
          "cashierName": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemWithBatchDto"
            },
            "nullable": true
          },
          "batchTrackingEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SaleWithBatchesResponseDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/SaleWithBatchesResponseDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesReportDto": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "totalTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "totalItemsSold": {
            "type": "integer",
            "format": "int32"
          },
          "averageTransactionValue": {
            "type": "number",
            "format": "double"
          },
          "totalProfit": {
            "type": "number",
            "format": "double"
          },
          "paymentMethodBreakdown": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMethodSummaryDto"
            },
            "nullable": true
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SalesReportDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/SalesReportDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SalesTrendDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "sales": {
            "type": "number",
            "format": "double"
          },
          "transactions": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SchedulePaymentDto": {
        "required": [
          "amount",
          "factureId",
          "paymentDate",
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "factureId": {
            "type": "integer",
            "format": "int32"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "maximum": 999999999.99,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "bankAccount": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ourPaymentReference": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isRecurring": {
            "type": "boolean"
          },
          "recurrencePattern": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SmartFifoRecommendationDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productBarcode": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "batchId": {
            "type": "integer",
            "format": "int32"
          },
          "batchNumber": {
            "type": "string",
            "nullable": true
          },
          "currentStock": {
            "type": "integer",
            "format": "int32"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "daysToExpiry": {
            "type": "integer",
            "format": "int32"
          },
          "priorityScore": {
            "type": "integer",
            "format": "int32"
          },
          "urgencyLevel": {
            "type": "string",
            "nullable": true
          },
          "recommendedAction": {
            "type": "string",
            "nullable": true
          },
          "batchRecommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FifoBatchScoreDto"
            },
            "nullable": true
          },
          "optimalSellingPrice": {
            "type": "number",
            "format": "double"
          },
          "discountRecommendation": {
            "type": "number",
            "format": "double"
          },
          "recommendedSaleQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "recommendedSaleDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "currentPrice": {
            "type": "number",
            "format": "double"
          },
          "recommendedPrice": {
            "type": "number",
            "format": "double"
          },
          "suggestedDiscount": {
            "type": "number",
            "format": "double"
          },
          "minimumViablePrice": {
            "type": "number",
            "format": "double"
          },
          "potentialLoss": {
            "type": "number",
            "format": "double"
          },
          "preventableLoss": {
            "type": "number",
            "format": "double"
          },
          "salesStrategy": {
            "type": "string",
            "nullable": true
          },
          "marketingAction": {
            "type": "string",
            "nullable": true
          },
          "potentialRevenue": {
            "type": "number",
            "format": "double"
          },
          "estimatedLoss": {
            "type": "number",
            "format": "double"
          },
          "netBenefit": {
            "type": "number",
            "format": "double"
          },
          "estimatedSellThroughDays": {
            "type": "integer",
            "format": "int32"
          },
          "recommendedSalesChannels": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "immediateActions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "timeline": {
            "$ref": "#/components/schemas/ActionTimeline"
          },
          "fifoScore": {
            "type": "integer",
            "format": "int32"
          },
          "fifoGrade": {
            "type": "string",
            "nullable": true
          },
          "optimizationOpportunity": {
            "type": "string",
            "nullable": true
          },
          "transferOpportunities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchTransferOpportunityDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SmartFifoRecommendationDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmartFifoRecommendationDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SmartNotificationDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "$ref": "#/components/schemas/NotificationPriority"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "potentialLoss": {
            "type": "number",
            "format": "double"
          },
          "actionDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "actionUrl": {
            "type": "string",
            "nullable": true
          },
          "actionItems": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "escalationRule": {
            "$ref": "#/components/schemas/EscalationRule"
          },
          "businessImpact": {
            "$ref": "#/components/schemas/BusinessImpact"
          },
          "affectedBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffectedBatch"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SmartNotificationDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SmartNotificationDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockAdjustmentRequest": {
        "required": [
          "adjustmentType",
          "branchId",
          "quantity",
          "reason"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "adjustmentType": {
            "minLength": 1,
            "type": "string"
          },
          "quantity": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "minLength": 1,
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockRebalancingSuggestionDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "sourceBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "sourceBranchName": {
            "type": "string",
            "nullable": true
          },
          "destinationBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "destinationBranchName": {
            "type": "string",
            "nullable": true
          },
          "suggestedQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "recommendedPriority": {
            "$ref": "#/components/schemas/TransferPriority"
          },
          "estimatedCost": {
            "type": "number",
            "format": "double"
          },
          "potentialSavings": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "StockRebalancingSuggestionDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockRebalancingSuggestionDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StockUpdateRequest": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "mutationType": {
            "$ref": "#/components/schemas/MutationType"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "nullable": true
          },
          "unitCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierAlertSummaryDto": {
        "type": "object",
        "properties": {
          "totalCriticalAlerts": {
            "type": "integer",
            "format": "int32"
          },
          "totalWarningAlerts": {
            "type": "integer",
            "format": "int32"
          },
          "totalInfoAlerts": {
            "type": "integer",
            "format": "int32"
          },
          "unreadAlerts": {
            "type": "integer",
            "format": "int32"
          },
          "totalAmountAtRisk": {
            "type": "number",
            "format": "double"
          },
          "suppliersWithAlerts": {
            "type": "integer",
            "format": "int32"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "alertsByCategory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlertCategoryDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SupplierAlertsDto": {
        "type": "object",
        "properties": {
          "criticalAlerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FactureSupplierAlertDto"
            },
            "nullable": true
          },
          "warningAlerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FactureSupplierAlertDto"
            },
            "nullable": true
          },
          "infoAlerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FactureSupplierAlertDto"
            },
            "nullable": true
          },
          "summary": {
            "$ref": "#/components/schemas/SupplierAlertSummaryDto"
          }
        },
        "additionalProperties": false
      },
      "SupplierFactureSummaryDto": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "totalFactures": {
            "type": "integer",
            "format": "int32"
          },
          "overdueFactures": {
            "type": "integer",
            "format": "int32"
          },
          "totalOutstanding": {
            "type": "number",
            "format": "double"
          },
          "overdueAmount": {
            "type": "number",
            "format": "double"
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "creditUtilization": {
            "type": "number",
            "format": "double"
          },
          "averagePaymentDays": {
            "type": "number",
            "format": "double"
          },
          "lastPaymentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "oldestUnpaidInvoice": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalOutstandingDisplay": {
            "type": "string",
            "nullable": true
          },
          "overdueAmountDisplay": {
            "type": "string",
            "nullable": true
          },
          "creditLimitDisplay": {
            "type": "string",
            "nullable": true
          },
          "creditUtilizationDisplay": {
            "type": "string",
            "nullable": true
          },
          "isCreditLimitExceeded": {
            "type": "boolean"
          },
          "hasOverduePayments": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "SupplierStatusDto": {
        "required": [
          "isActive"
        ],
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          },
          "reason": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SuppliersByBranchDto": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          },
          "branchCode": {
            "type": "string",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "totalSuppliers": {
            "type": "integer",
            "format": "int32"
          },
          "activeSuppliers": {
            "type": "integer",
            "format": "int32"
          },
          "totalOutstanding": {
            "type": "number",
            "format": "double"
          },
          "averageFactureAmount": {
            "type": "number",
            "format": "double"
          },
          "totalFacturesThisMonth": {
            "type": "integer",
            "format": "int32"
          },
          "paymentComplianceRate": {
            "type": "number",
            "format": "double"
          },
          "topSuppliers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopSupplierByBranchDto"
            },
            "nullable": true
          },
          "spendingByCategory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategorySpendingDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SwitchBranchRequest": {
        "required": [
          "branchId"
        ],
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TimelineEvent": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "event": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TopCustomerDto": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "membershipType": {
            "type": "string",
            "nullable": true
          },
          "totalSpent": {
            "type": "number",
            "format": "double"
          },
          "transactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "averageOrderValue": {
            "type": "number",
            "format": "double"
          },
          "lastPurchase": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TopMemberDto": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int32"
          },
          "memberName": {
            "type": "string",
            "nullable": true
          },
          "memberNumber": {
            "type": "string",
            "nullable": true
          },
          "transactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalSpent": {
            "type": "number",
            "format": "double"
          },
          "averageTransaction": {
            "type": "number",
            "format": "double"
          },
          "lastTransactionDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TopMemberDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopMemberDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TopProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productBarcode": {
            "type": "string",
            "nullable": true
          },
          "totalQuantitySold": {
            "type": "integer",
            "format": "int32"
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "totalProfit": {
            "type": "number",
            "format": "double"
          },
          "transactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "weightedScore": {
            "type": "number",
            "format": "double"
          },
          "normalizedScore": {
            "type": "number",
            "format": "double"
          },
          "profitMargin": {
            "type": "number",
            "format": "double"
          },
          "averageQuantityPerTransaction": {
            "type": "number",
            "format": "double"
          },
          "performanceCategory": {
            "type": "string",
            "nullable": true
          },
          "performanceBadgeColor": {
            "type": "string",
            "nullable": true
          },
          "lastSaleDate": {
            "type": "string",
            "format": "date-time"
          },
          "daysSinceLastSale": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TopProductDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopProductDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TopSellingProductDto": {
        "type": "object",
        "properties": {
          "productName": {
            "type": "string",
            "nullable": true
          },
          "categoryName": {
            "type": "string",
            "nullable": true
          },
          "totalSold": {
            "type": "integer",
            "format": "int32"
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "percentage": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TopSupplierByBranchDto": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "format": "int32"
          },
          "supplierCode": {
            "type": "string",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "monthlySpending": {
            "type": "number",
            "format": "double"
          },
          "facturesCount": {
            "type": "integer",
            "format": "int32"
          },
          "outstandingAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TransferAnalyticsDto": {
        "type": "object",
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/TransferMetricsDto"
          },
          "branchStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchTransferStatsDto"
            },
            "nullable": true
          },
          "trendAnalysis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferTrendDto"
            },
            "nullable": true
          },
          "topTransferredProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTransferStatsDto"
            },
            "nullable": true
          },
          "efficiencyMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferEfficiencyDto"
            },
            "nullable": true
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TransferAnalyticsDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/TransferAnalyticsDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferApprovalRequestDto": {
        "required": [
          "isApproved"
        ],
        "type": "object",
        "properties": {
          "isApproved": {
            "type": "boolean"
          },
          "approvalNotes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "adjustedCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "adjustedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferCostCalculationRequestDto": {
        "required": [
          "destinationBranchId",
          "items",
          "sourceBranchId"
        ],
        "type": "object",
        "properties": {
          "sourceBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "destinationBranchId": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTransferItemDto"
            }
          },
          "priority": {
            "$ref": "#/components/schemas/TransferPriority"
          }
        },
        "additionalProperties": false
      },
      "TransferEfficiencyDto": {
        "type": "object",
        "properties": {
          "route": {
            "type": "string",
            "nullable": true
          },
          "transferCount": {
            "type": "integer",
            "format": "int32"
          },
          "averageDistance": {
            "type": "number",
            "format": "double"
          },
          "averageCost": {
            "type": "number",
            "format": "double"
          },
          "averageTime": {
            "type": "number",
            "format": "double"
          },
          "costPerKm": {
            "type": "number",
            "format": "double"
          },
          "successRate": {
            "type": "number",
            "format": "double"
          },
          "recommendedImprovement": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferEfficiencyDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferEfficiencyDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferMetricsDto": {
        "type": "object",
        "properties": {
          "totalTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "pendingTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "completedTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "cancelledTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "totalTransferValue": {
            "type": "number",
            "format": "double"
          },
          "averageTransferValue": {
            "type": "number",
            "format": "double"
          },
          "averageProcessingTime": {
            "type": "number",
            "format": "double"
          },
          "successRate": {
            "type": "number",
            "format": "double"
          },
          "averageCostPerKm": {
            "type": "number",
            "format": "double"
          },
          "emergencyTransfers": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TransferPriority": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "TransferReceiptItemDto": {
        "required": [
          "receivedQuantity",
          "transferItemId"
        ],
        "type": "object",
        "properties": {
          "transferItemId": {
            "type": "integer",
            "format": "int32"
          },
          "receivedQuantity": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "isAccepted": {
            "type": "boolean"
          },
          "qualityNotes": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferReceiptRequestDto": {
        "required": [
          "receivedItems"
        ],
        "type": "object",
        "properties": {
          "receivedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferReceiptItemDto"
            }
          },
          "receiptNotes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "hasDamages": {
            "type": "boolean"
          },
          "damageNotes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferShipmentRequestDto": {
        "type": "object",
        "properties": {
          "logisticsProvider": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "trackingNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "estimatedDeliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "actualCost": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shippingNotes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "TransferSuggestionsDto": {
        "type": "object",
        "properties": {
          "rebalancingSuggestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StockRebalancingSuggestionDto"
            },
            "nullable": true
          },
          "emergencyAlerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmergencyTransferSuggestionDto"
            },
            "nullable": true
          },
          "optimizationSuggestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationSuggestionDto"
            },
            "nullable": true
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TransferSuggestionsDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/TransferSuggestionsDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferTrendDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "transferCount": {
            "type": "integer",
            "format": "int32"
          },
          "transferValue": {
            "type": "number",
            "format": "double"
          },
          "averageProcessingTime": {
            "type": "number",
            "format": "double"
          },
          "emergencyCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TransferTrendDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferTrendDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "UndoDisposalDto": {
        "type": "object",
        "properties": {
          "batchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateBranchAccessDto": {
        "required": [
          "accessibleBranchIds",
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "canAccessMultipleBranches": {
            "type": "boolean"
          },
          "accessibleBranchIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "additionalProperties": false
      },
      "UpdateBranchDto": {
        "type": "object",
        "properties": {
          "branchCode": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "branchName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "branchType": {
            "$ref": "#/components/schemas/BranchType"
          },
          "address": {
            "maxLength": 300,
            "type": "string",
            "nullable": true
          },
          "managerName": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "phone": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "province": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "openingDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "storeSize": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "employeeCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCalendarEventDto": {
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isAllDay": {
            "type": "boolean",
            "nullable": true
          },
          "eventType": {
            "$ref": "#/components/schemas/CalendarEventType"
          },
          "priority": {
            "$ref": "#/components/schemas/EventPriority"
          },
          "actionUrl": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "relatedEntityId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relatedEntityType": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasReminder": {
            "type": "boolean",
            "nullable": true
          },
          "reminderMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "color": {
            "maxLength": 7,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          },
          "recurrencePattern": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateCategoryDto": {
        "required": [
          "color",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "color": {
            "minLength": 1,
            "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "requiresExpiryDate": {
            "type": "boolean"
          },
          "defaultExpiryWarningDays": {
            "maximum": 365,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateCreditLimitDto": {
        "required": [
          "newCreditLimit",
          "reason"
        ],
        "type": "object",
        "properties": {
          "newCreditLimit": {
            "maximum": 100000000,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "reason": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "requiresApproval": {
            "type": "boolean"
          },
          "notes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateFactureDto": {
        "type": "object",
        "properties": {
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "supplierPONumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryNoteNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "receiptFile": {
            "type": "string",
            "nullable": true
          },
          "supportingDocs": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateMemberAfterCreditRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "saleId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateMemberRequest": {
        "required": [
          "name",
          "phone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "phone": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "format": "tel"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "address": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateNotificationSettingsRequest": {
        "type": "object",
        "properties": {
          "emailEnabled": {
            "type": "boolean"
          },
          "emailLowStock": {
            "type": "boolean"
          },
          "emailMonthlyReport": {
            "type": "boolean"
          },
          "emailSystemUpdates": {
            "type": "boolean"
          },
          "inAppEnabled": {
            "type": "boolean"
          },
          "inAppLowStock": {
            "type": "boolean"
          },
          "inAppSales": {
            "type": "boolean"
          },
          "inAppSystem": {
            "type": "boolean"
          },
          "lowStockThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "quietHoursStart": {
            "type": "string",
            "format": "date-span"
          },
          "quietHoursEnd": {
            "type": "string",
            "format": "date-span"
          },
          "emailExpiry": {
            "type": "boolean"
          },
          "inAppExpiry": {
            "type": "boolean"
          },
          "expiryWarning7Days": {
            "type": "boolean"
          },
          "expiryUrgent3Days": {
            "type": "boolean"
          },
          "expiryExpiredAlert": {
            "type": "boolean"
          },
          "expiryDailySummary": {
            "type": "boolean"
          },
          "fifoRecommendations": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdatePaymentRequest": {
        "type": "object",
        "properties": {
          "notes": {
            "type": "string",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProductBatchDto": {
        "required": [
          "batchNumber"
        ],
        "type": "object",
        "properties": {
          "batchNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "expiryDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "productionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currentStock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "costPerUnit": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "supplierName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "purchaseOrderNumber": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isBlocked": {
            "type": "boolean"
          },
          "blockReason": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateProductRequest": {
        "required": [
          "barcode",
          "buyPrice",
          "categoryId",
          "name",
          "sellPrice",
          "stock"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "barcode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "buyPrice": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "sellPrice": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "stock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "minimumStock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "minStock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "maxStock": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateSupplierDto": {
        "required": [
          "companyName",
          "contactPerson",
          "creditLimit",
          "email",
          "paymentTerms",
          "phone"
        ],
        "type": "object",
        "properties": {
          "companyName": {
            "maxLength": 100,
            "minLength": 2,
            "type": "string"
          },
          "contactPerson": {
            "maxLength": 50,
            "minLength": 2,
            "type": "string"
          },
          "phone": {
            "maxLength": 15,
            "minLength": 10,
            "type": "string",
            "format": "tel"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "address": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "paymentTerms": {
            "maximum": 365,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "creditLimit": {
            "maximum": 999999999,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateTransferItemRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "approvedQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateTransferStatusRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateTransferItemRequest"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserProfileDto": {
        "required": [
          "email",
          "fullName",
          "gender"
        ],
        "type": "object",
        "properties": {
          "fullName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "gender": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "department": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "position": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "division": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bio": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "required": [
          "name",
          "passwordHash",
          "role",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "passwordHash": {
            "minLength": 1,
            "type": "string"
          },
          "role": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "branchId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "branch": {
            "$ref": "#/components/schemas/Branch"
          },
          "canAccessMultipleBranches": {
            "type": "boolean"
          },
          "accessibleBranchIds": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userProfile": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "userNotificationSettings": {
            "$ref": "#/components/schemas/UserNotificationSettings"
          }
        },
        "additionalProperties": false
      },
      "UserNotificationSettings": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "emailEnabled": {
            "type": "boolean"
          },
          "inAppEnabled": {
            "type": "boolean"
          },
          "emailLowStock": {
            "type": "boolean"
          },
          "emailMonthlyReport": {
            "type": "boolean"
          },
          "emailSystemUpdates": {
            "type": "boolean"
          },
          "inAppLowStock": {
            "type": "boolean"
          },
          "inAppSales": {
            "type": "boolean"
          },
          "inAppSystem": {
            "type": "boolean"
          },
          "lowStockThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "quietHoursStart": {
            "type": "string",
            "format": "date-span"
          },
          "quietHoursEnd": {
            "type": "string",
            "format": "date-span"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserProfile": {
        "required": [
          "email",
          "fullName",
          "gender",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "photoUrl": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "gender": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "department": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "position": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "division": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "bio": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserProfileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "photoUrl": {
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "department": {
            "type": "string",
            "nullable": true
          },
          "position": {
            "type": "string",
            "nullable": true
          },
          "division": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UserProfileDtoApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/UserProfileDto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserSummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "branchName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateBatchAllocationRequest": {
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SaleItemWithBatchesDto"
            }
          }
        },
        "additionalProperties": false
      },
      "VerifyFactureDto": {
        "type": "object",
        "properties": {
          "factureId": {
            "type": "integer",
            "format": "int32"
          },
          "verificationNotes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerifyFactureItemDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifyFactureItemDto": {
        "required": [
          "itemId"
        ],
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer",
            "format": "int32"
          },
          "receivedQuantity": {
            "maximum": 999999.99,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "acceptedQuantity": {
            "maximum": 999999.99,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "verificationNotes": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isVerified": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "WorstProductDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "productBarcode": {
            "type": "string",
            "nullable": true
          },
          "totalQuantitySold": {
            "type": "integer",
            "format": "int32"
          },
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "totalProfit": {
            "type": "number",
            "format": "double"
          },
          "transactionCount": {
            "type": "integer",
            "format": "int32"
          },
          "daysWithoutSale": {
            "type": "integer",
            "format": "int32"
          },
          "currentStock": {
            "type": "integer",
            "format": "int32"
          },
          "performanceScore": {
            "type": "number",
            "format": "double"
          },
          "normalizedScore": {
            "type": "number",
            "format": "double"
          },
          "performanceCategory": {
            "type": "string",
            "nullable": true
          },
          "lastSaleDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stockTurnoverRatio": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "WorstProductDtoListApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorstProductDto"
            },
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "error": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Cookie": {
        "type": "apiKey",
        "description": "Cookie-based authentication with branch-aware authorization",
        "name": "TokoEniwanAuth",
        "in": "cookie"
      }
    }
  },
  "security": [
    {
      "Cookie": [ ]
    }
  ]
}